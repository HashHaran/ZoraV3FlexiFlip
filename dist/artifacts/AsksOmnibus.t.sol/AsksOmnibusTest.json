{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_CreateAskMinimalModuleNotApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_CreateAskMinimalNotTokenOwnerOrOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_CreateAskMinimalTransferHelperNotApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_CreateAskModuleNotApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_CreateAskNotTokenOwnerOrOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRevert_CreateAskTransferHelperNotApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CreateAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CreateAskMinimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_FillAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1149:11742:41:-:0;;;1573:26:79;;;-1:-1:-1;;1573:26:79;1595:4;1573:26;;;1149:11742:41;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1149:11742:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9103:1037;;;:::i;:::-;;1844:2313;;;:::i;8337:712::-;;;:::i;4954:226::-;;;:::i;5827:1200::-;;;:::i;11549:1340::-;;;:::i;5492:329::-;;;:::i;5186:300::-;;;:::i;1605:18:79:-;;;;;;;;;;;;;;;179:14:104;;172:22;154:41;;142:2;127:18;1605::79;;;;;;;4213:735:41;;;:::i;7648:683::-;;;:::i;10195:1298::-;;;:::i;7033:609::-;;;:::i;1573:26:79:-;;;;;;;;;9103:1037:41;9144:2;;9161:6;;9144:25;;;;;:2;9161:6;;;9144:25;;;352:74:104;9144:2:41;;;;;;:8;;325:18:104;;9144:25:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9179:4:41;;9215:5;;9179:4;;;;;-1:-1:-1;9179:14:41;;-1:-1:-1;9215:5:41;9179:4;9257:24;:15;9275:6;9257:24;:::i;:::-;9325:20;;9368:4;;9395:5;;9433:97;;;;;;;;9325:20;9433:97;;;9508:19;;9325:20;9508:19;;;9433:97;;;;;;;;9544:64;;;;;;;9586:5;;;;9544:64;;;;;;;;;9179:439;;;;;;;;;;;;;;;9296:7;;9325:20;;;;9368:4;;;;9395:5;;9415:4;;9433:97;;9179:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9629:2:41;;9646:5;;9629:24;;;;;:2;9646:5;;;9629:24;;;352:74:104;9629:2:41;;;;;;-1:-1:-1;9629:8:41;;-1:-1:-1;325:18:104;;9629:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9663:4:41;;9684:5;;9712:4;;9727:6;;9663:72;;;;;:4;9684:5;;;9663:72;;;2532:34:104;9663:4:41;2582:18:104;;;2575:34;9695:7:41;2625:18:104;;;2618:34;9712:4:41;;;2668:18:104;;;2661:43;9727:6:41;;2720:19:104;;;2713:44;9663:4:41;;;-1:-1:-1;9663:12:41;;-1:-1:-1;2443:19:104;;9663:72:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9755:4:41;;9778:16;;9755:41;;;;;:4;9778:16;;;9755:41;;;352:74:104;9746:63:41;;-1:-1:-1;9755:4:41;;;-1:-1:-1;9755:14:41;;325:18:104;;9755:41:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9798:10;9746:8;:63::i;:::-;9828:4;;9851:6;;9828:31;;;;;:4;9851:6;;;9828:31;;;352:74:104;9819:58:41;;9828:4;;;;;:14;;325:18:104;;9828:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9861:15;9819:8;:58::i;:::-;9896:4;;9919:19;;9896:44;;;;;:4;9919:19;;;9896:44;;;352:74:104;9887::41;;9896:4;;;;;:14;;325:18:104;;9896:44:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9942:18;9887:8;:74::i;:::-;9980:4;;10003:20;;9980:45;;;;;:4;10003:20;;;9980:45;;;352:74:104;9971:110:41;;9980:4;;;;;:14;;325:18:104;;9980:45:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10027:53;9971:8;:110::i;:::-;10100:5;;:16;;;;;:5;:16;;;3111:25:104;10091:42:41;;10100:5;;;:13;;3084:18:104;;10100:16:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10126:5;;;;10091:8;:42::i;:::-;9103:1037::o;1844:2313::-;1694:37:79;1900:21:41;;;;;;;;1965:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1953:9:41;:31;;;;;;;;;;;;;;;2001:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1994:4:41;:36;;;;;;;;;;;;;;-1:-1:-1;2076:9:41;2046:56;;2076:9;;;2046:56;;;:::i;:::-;3749:42:104;3818:15;;;3800:34;;3870:15;;3865:2;3850:18;;3843:43;3727:2;3712:18;2046:56:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2040:3:41;:62;;;;;;;;;;;;;;2134:37;;;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2134:37:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2112:19:41;:59;;;;;;;;;;;2237:3;;2204:38;;2237:3;;;2204:38;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2204:38:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2181:20:41;:61;;;;;;;;;;;-1:-1:-1;2272:9:41;2287:3;;2272:19;;;;;2287:3;;;2272:19;;;352:74:104;2272:9:41;;;:14;;325:18:104;;2272:19:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2301:4:41;;2319:3;;2301:35;;;;;:4;2319:3;;;2301:35;;;3800:34:104;2301:4:41;3850:18:104;;;3843:43;2301:4:41;;;-1:-1:-1;2301:9:41;;-1:-1:-1;3712:18:104;;2301:35:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2397:3:41;;2380:22;;2397:3;;;;;-1:-1:-1;2380:22:41;;-1:-1:-1;2380:22:41;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2380:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2371:6:41;:31;;;;;;;;;;;2452:3;;2435:22;;2452:3;;;2435:22;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2435:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2412:20:41;:45;;;;;;;;;;;2495:3;;2478:22;;2495:3;;;2478:22;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2478:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2467:8:41;:33;;;;;;;;;;;2535:3;;2518:22;;2535:3;;;2518:22;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2518:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2510:5:41;:30;;;;;;;;;;;2576:3;;2559:22;;2576:3;;;2559:22;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2559:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2550:6:41;:31;;;;;;;;;;;2627:3;;2610:22;;2627:3;;;2610:22;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2610:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2591:16:41;:41;;;;;;;;;;;2681:3;;2664:22;;2681:3;;;2664:22;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2664:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2642:19:41;:44;;;;;;;;;;;2721:3;;2704:22;;2721:3;;;2704:22;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2704:22:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2696:5:41;:30;;;;;;;;;;;2803:16;;2777:44;;2803:16;;;2777:44;;;:::i;:::-;382:42:104;370:55;;;352:74;;340:2;325:18;2777:44:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2761:13:41;:60;;;;;;;;;;;;;;;2839:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2831:5:41;:23;;;;;;;;;;;;;;;2872:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2864:5:41;:24;;;;;;;;;;;;;;;2905:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2898:4:41;:17;;;;;;;;;;;;;;2988:19;;3018:20;;3049:13;;3073:4;;2964:130;;2988:19;;;;3018:20;;;;3049:13;;;;3073:4;;;2964:130;;;:::i;:::-;4422:42:104;4491:15;;;4473:34;;4543:15;;;4538:2;4523:18;;4516:43;4595:15;;;4590:2;4575:18;;4568:43;4647:15;;4642:2;4627:18;;4620:43;4700:15;;;4694:3;4679:19;;4672:44;4399:3;4384:19;2964:130:41;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2957:4:41;:137;;;;;;;;;;;;;;-1:-1:-1;3104:9:41;:39;;;;;;;;352:74:104;;;;3104:9:41;;;;:24;;325:18:104;;3104:39:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3178:2:41;;3194:6;;3178:35;;;;;:2;3194:6;;;3178:35;;;4929:74:104;3203:9:41;5019:18:104;;;5012:34;3178:2:41;;;;;;-1:-1:-1;3178:7:41;;-1:-1:-1;4902:18:104;;3178:35:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3223:2:41;;3239:5;;3223:34;;;;;:2;3239:5;;;3223:34;;;4929:74:104;3247:9:41;5019:18:104;;;5012:34;3223:2:41;;;;;;-1:-1:-1;3223:7:41;;-1:-1:-1;4902:18:104;;3223:34:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3297:5:41;;3316:6;;3297:30;;;;;:5;3316:6;;;3297:30;;;4929:74:104;3297:5:41;5019:18:104;;;5012:34;3297:5:41;;;-1:-1:-1;3297:10:41;;-1:-1:-1;4902:18:104;;3297:30:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3380:5:41;;3399;;3380:33;;;;;:5;3399;;;3380:33;;;4929:74:104;3407:5:41;5019:18:104;;;5012:34;3380:5:41;;;-1:-1:-1;3380:10:41;;-1:-1:-1;4902:18:104;;3380:33:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3465:2:41;;3482:5;;3465:24;;;;;:2;3482:5;;;3465:24;;;352:74:104;3465:2:41;;;;;;-1:-1:-1;3465:8:41;;-1:-1:-1;325:18:104;;3465:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3499:4;;;;;;;;;;;:12;;;3519:8;3499:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3585:6:41;;3621:4;;3585:48;;;;;:6;3621:4;;;3585:48;;;5873:74:104;3585:6:41;5963:18:104;;;5956:50;3585:6:41;;;-1:-1:-1;3585:27:41;;-1:-1:-1;5846:18:104;;;-1:-1:-1;3585:48:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3643:5:41;;3678:4;;3643:47;;;;;:5;3678:4;;;3643:47;;;5873:74:104;3643:5:41;5963:18:104;;;5956:50;3643:5:41;;;-1:-1:-1;3643:26:41;;-1:-1:-1;5846:18:104;;3643:47:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3748:2:41;;3765:6;;3748:25;;;;;:2;3765:6;;;3748:25;;;352:74:104;3748:2:41;;;;;;-1:-1:-1;3748:8:41;;-1:-1:-1;325:18:104;;3748:25:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3783:5:41;;3815:20;;3783:60;;;;;:5;3815:20;;;3783:60;;;5873:74:104;3783:5:41;5963:18:104;;;5956:50;3783:5:41;;;-1:-1:-1;3783:23:41;;-1:-1:-1;5846:18:104;;3783:60:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3914:2:41;;3931:5;;3914:24;;;;;:2;3931:5;;;3914:24;;;352:74:104;3914:2:41;;;;;;-1:-1:-1;3914:8:41;;-1:-1:-1;325:18:104;;3914:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3948:5:41;;3970:19;;;3948:50;;;;;:5;3970:19;;;3948:50;;;4929:74:104;;;;3992:5:41;5019:18:104;;;5012:34;3948:5:41;;;;-1:-1:-1;3948:13:41;;-1:-1:-1;4902:18:104;;3948:50:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4064:2:41;;4081:5;;4064:24;;;;;:2;4081:5;;;4064:24;;;352:74:104;4064:2:41;;;;;;:8;;325:18:104;;4064:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4098:4:41;;4119:19;;;4098:52;;;;;:4;4119:19;;;4098:52;;;4929:74:104;;;;4141:8:41;5019:18:104;;;5012:34;4098:4:41;;;;-1:-1:-1;4098:12:41;;-1:-1:-1;4902:18:104;;4098:52:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1844:2313::o;8337:712::-;8411:2;;8433:6;;8411:30;;;;;:2;8433:6;;;8411:30;;;352:74:104;8411:2:41;;;;;;:13;;325:18:104;;8411:30:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8451:5:41;;8483:20;;8451:61;;;;;:5;8483:20;;;8451:61;;;5873:74:104;8451:5:41;5963:18:104;;;5956:50;8451:5:41;;;-1:-1:-1;8451:23:41;;-1:-1:-1;5846:18:104;;8451:61:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8522:2:41;;:47;;;;;6829:2:104;8522:47:41;;;6811:21:104;6868:2;6848:18;;;6841:30;6907;6887:18;;;6880:58;8522:2:41;;;;;;;-1:-1:-1;8522:15:41;;-1:-1:-1;6955:18:104;;8522:47:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8579:4:41;;8615:5;;8579:4;;;;;-1:-1:-1;8579:14:41;;-1:-1:-1;8615:5:41;8579:4;8657:24;:15;8675:6;8657:24;:::i;:::-;8725:20;;8768:4;;8795:5;;8833:97;;;;;;;;8725:20;8833:97;;;8908:19;;8725:20;8908:19;;;8833:97;;;;;;;;8944:64;;;;;;;8986:5;;;;8944:64;;;;;;;;;8579:439;;;;;;;;;;;;;;;8696:7;;8725:20;;;;8768:4;;;;8795:5;;8815:4;;8833:97;;8579:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9028:2;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8337:712::o;4954:226::-;5033:2;;5050:5;;5033:24;;;;;:2;5050:5;;;5033:24;;;352:74:104;5033:2:41;;;;;;:8;;325:18:104;;5033:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5067:2:41;;:47;;;;;7185:2:104;5067:47:41;;;7167:21:104;7224:2;7204:18;;;7197:30;7263;7243:18;;;7236:58;5067:2:41;;;;;;;-1:-1:-1;5067:15:41;;-1:-1:-1;7311:18:104;;5067:47:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5124:4:41;;5154:5;;5124:49;;;;;:4;5154:5;;;5124:49;;;7576:74:104;5124:4:41;7666:18:104;;;7659:34;5165:7:41;7709:18:104;;;7702:34;5124:4:41;;;-1:-1:-1;5124:21:41;;-1:-1:-1;7549:18:104;;5124:49:41;;;;;;;;;;;;;;;;;;;;5827:1200;5870:2;;5887:6;;5870:25;;;;;:2;5887:6;;;5870:25;;;352:74:104;5870:2:41;;;;;;:8;;325:18:104;;5870:25:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5905:4:41;;5941:5;;5905:4;;;;;-1:-1:-1;5905:14:41;;-1:-1:-1;5941:5:41;5905:4;5983:24;:15;6001:6;5983:24;:::i;:::-;6051:20;;6094:4;;6121:5;;6159:97;;;;;;;;6051:20;6159:97;;;6234:19;;6051:20;6234:19;;;6159:97;;;;;;;;6270:64;;;;;;;6312:5;;;;6270:64;;;;;;;;;5905:439;;;;;;;;;;;;;;;6022:7;;6051:20;;;;6094:4;;;;6121:5;;6141:4;;6159:97;;5905:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6391:4:41;;6415:5;;6391:34;;;;;:4;6415:5;;;6391:34;;;4929:74:104;6354:34:41;5019:18:104;;;5012:34;;;6354::41;-1:-1:-1;6391:4:41;;;-1:-1:-1;6391:15:41;;4902:18:104;;6391:34:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6444:10;;;;6464:6;;6354:71;;-1:-1:-1;6435:37:41;;6464:6;;6435:8;:37::i;:::-;6491:24;;;;6525:20;;6482:65;;6491:24;6525:20;;6482:8;:65::i;:::-;6566:12;;;;6588:4;;6557:37;;6566:12;6588:4;;6557:8;:37::i;:::-;6613:9;;;;6632:5;;6604:35;;6613:9;6632:5;;6604:8;:35::i;:::-;6658:10;;;;6649:54;;;;6677:24;:15;6695:6;6677:24;:::i;:::-;6649:54;;:8;:54::i;:::-;6713:33;6722:3;:17;;;6713:33;;6741:4;6713:8;:33::i;:::-;6765:9;;6756:28;;6776:7;6756:8;:28::i;:::-;6803:13;;;;:19;6832:5;;6794:45;;6803:19;6832:5;;6794:8;:45::i;:::-;6849:36;6858:3;:13;;;:23;;;6883:1;6849:8;:36::i;:::-;6904:14;;;;:28;6895:41;;;;6934:1;6895:8;:41::i;:::-;6955:14;;;;:34;;;6999:19;;6946:74;;6955:34;6999:19;;6946:8;:74::i;11549:1340::-;11592:2;;11614:6;;11592:30;;;;;:2;11614:6;;;11592:30;;;352:74:104;11592:2:41;;;;;;:13;;325:18:104;;11592:30:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11633:4:41;;11669:5;;11633:4;;;;;-1:-1:-1;11633:14:41;;-1:-1:-1;11669:5:41;11633:4;11711:24;:15;11729:6;11711:24;:::i;:::-;11779:20;;11822:4;;11849:5;;11887:97;;;;;;;;11779:20;11887:97;;;11962:19;;11779:20;11962:19;;;11887:97;;;;;;;;11998:64;;;;;;;12040:5;;;;11998:64;;;;;;;;;11633:439;;;;;;;;;;;;;;;11750:7;;11779:20;;;;11822:4;;;;11849:5;;11869:4;;11887:97;;11633:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12083:4:41;;12106:5;;12083:33;;;;;:4;12106:5;;;12083:33;;;4929:74:104;12083:4:41;5019:18:104;;;5012:34;12083:4:41;;;-1:-1:-1;12083:14:41;;-1:-1:-1;4902:18:104;;12083:33:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12164:4:41;;12188:5;;12164:34;;;;;:4;12188:5;;;12164:34;;;4929:74:104;12127:34:41;5019:18:104;;;5012:34;;;12127::41;-1:-1:-1;12164:4:41;;;-1:-1:-1;12164:15:41;;4902:18:104;;12164:34:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12127:71;;12208:32;12217:3;:10;;;12237:1;12208:8;:32::i;:::-;12250:46;12259:3;:24;;;12293:1;12250:8;:46::i;:::-;12306:34;12315:3;:12;;;12337:1;12306:8;:34::i;:::-;12350:31;12359:3;:9;;;12378:1;12350:8;:31::i;:::-;12391:23;12400:3;:10;;;12391:23;;12412:1;12391:8;:23::i;:::-;12424:30;12433:3;:17;;;12424:30;;12452:1;12424:8;:30::i;:::-;12473:9;;12464:22;;12473:9;12464:8;:22::i;:::-;12505:13;;;;:19;12496:41;;12505:19;12496:8;:41::i;:::-;12547:36;12556:3;:13;;;:23;;;12581:1;12547:8;:36::i;:::-;12602:14;;;;:28;12593:41;;;;12602:28;12593:8;:41::i;:::-;12644:56;12653:3;:14;;;:34;;;12697:1;12644:8;:56::i;:::-;12710:2;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12735:2:41;;12757:5;;12735:29;;;;;:2;12757:5;;;12735:29;;;352:74:104;12735:2:41;;;;;;-1:-1:-1;12735:13:41;;-1:-1:-1;325:18:104;;12735:29:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12774:2:41;;:31;;;;;10758:2:104;12774:31:41;;;10740:21:104;10797:2;10777:18;;;10770:30;10836:14;10816:18;;;10809:42;12774:2:41;;;;;;;-1:-1:-1;12774:15:41;;-1:-1:-1;10868:18:104;;12774:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12815:4:41;;12836:5;;12864:4;;12815:67;;;;;:4;12836:5;;;12815:67;;;2532:34:104;12815:4:41;2582:18:104;;;2575:34;;;12847:7:41;2625:18:104;;;2618:34;12864:4:41;;;2668:18:104;;;2661:43;2720:19;;;2713:44;;;;12815:4:41;;;-1:-1:-1;12815:12:41;;-1:-1:-1;2443:19:104;;12815:67:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11582:1307;11549:1340::o;5492:329::-;5573:2;;5595:6;;5573:30;;;;;:2;5595:6;;;5573:30;;;352:74:104;5573:2:41;;;;;;:13;;325:18:104;;5573:30:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5613:5:41;;5645:20;;5613:61;;;;;:5;5645:20;;;5613:61;;;5873:74:104;5613:5:41;5963:18:104;;;5956:50;5613:5:41;;;-1:-1:-1;5613:23:41;;-1:-1:-1;5846:18:104;;5613:61:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5684:2:41;;:47;;;;;6829:2:104;5684:47:41;;;6811:21:104;6868:2;6848:18;;;6841:30;6907;6887:18;;;6880:58;5684:2:41;;;;;;;-1:-1:-1;5684:15:41;;-1:-1:-1;6955:18:104;;5684:47:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5741:4:41;;5771:5;;5741:49;;;;;:4;5771:5;;;5741:49;;;7576:74:104;5741:4:41;7666:18:104;;;7659:34;5782:7:41;7709:18:104;;;7702:34;5741:4:41;;;-1:-1:-1;5741:21:41;;-1:-1:-1;7549:18:104;;5741:49:41;7340:402:104;5186:300:41;5259:2;;5281:6;;5259:30;;;;;:2;5281:6;;;5259:30;;;352:74:104;5259:2:41;;;;;;:13;;325:18:104;;5259:30:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5299:6:41;;5335:4;;5299:49;;;;;:6;5335:4;;;5299:49;;;5873:74:104;5299:6:41;5963:18:104;;;5956:50;5299:6:41;;;-1:-1:-1;5299:27:41;;-1:-1:-1;5846:18:104;;5299:49:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5358:2:41;;:38;;;;;11098:2:104;5358:38:41;;;11080:21:104;11137:2;11117:18;;;11110:30;11176:21;11156:18;;;11149:49;5358:2:41;;;;;;;-1:-1:-1;5358:15:41;;-1:-1:-1;11215:18:104;;5358:38:41;10897:342:104;4213:735:41;4263:2;;4280:6;;4263:25;;;;;:2;4280:6;;;4263:25;;;352:74:104;4263:2:41;;;;;;:8;;325:18:104;;4263:25:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4298:4:41;;4328:5;;4298:49;;;;;:4;4328:5;;;4298:49;;;7576:74:104;4298:4:41;7666:18:104;;;7659:34;4339:7:41;7709:18:104;;;7702:34;4298:4:41;;;-1:-1:-1;4298:21:41;;-1:-1:-1;7549:18:104;;4298:49:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4394:4:41;;4418:5;;4394:34;;;;;:4;4418:5;;;4394:34;;;4929:74:104;4357:34:41;5019:18:104;;;5012:34;;;4357::41;-1:-1:-1;4394:4:41;;;-1:-1:-1;4394:15:41;;4902:18:104;;4394:34:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4447:10;;;;4467:6;;4357:71;;-1:-1:-1;4438:37:41;;4467:6;;4438:8;:37::i;:::-;4485:46;4494:3;:24;;;4528:1;4485:8;:46::i;:::-;4541:34;4550:3;:12;;;4572:1;4541:8;:34::i;:::-;4585:31;4594:3;:9;;;4613:1;4585:8;:31::i;:::-;4626:23;4635:3;:10;;;4626:23;;4647:1;4626:8;:23::i;:::-;4659:30;4668:3;:17;;;4659:30;;4687:1;4659:8;:30::i;:::-;4708:9;;4699:28;;4719:7;4699:8;:28::i;:::-;4746:13;;;;:19;4737:41;;4746:19;4737:8;:41::i;:::-;4788:36;4797:3;:13;;;:23;;;4822:1;4788:8;:36::i;:::-;4843:14;;;;:28;4834:41;;;;4843:28;4834:8;:41::i;:::-;4885:56;4894:3;:14;;;:34;;;4938:1;4885:8;:56::i;7648:683::-;7714:2;;7736:6;;7714:30;;;;;:2;7736:6;;;7714:30;;;352:74:104;7714:2:41;;;;;;:13;;325:18:104;;7714:30:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7754:6:41;;7790:4;;7754:49;;;;;:6;7790:4;;;7754:49;;;5873:74:104;7754:6:41;5963:18:104;;;5956:50;7754:6:41;;;-1:-1:-1;7754:27:41;;-1:-1:-1;5846:18:104;;7754:49:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7813:2:41;;:38;;;;;11098:2:104;7813:38:41;;;11080:21:104;11137:2;11117:18;;;11110:30;11176:21;11156:18;;;11149:49;7813:2:41;;;;;;;-1:-1:-1;7813:15:41;;-1:-1:-1;11215:18:104;;7813:38:41;10897:342:104;10195:1298:41;10237:2;;10259:6;;10237:30;;;;;:2;10259:6;;;10237:30;;;352:74:104;10237:2:41;;;;;;:13;;325:18:104;;10237:30:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10277:4:41;;10313:5;;10277:4;;;;;-1:-1:-1;10277:14:41;;-1:-1:-1;10313:5:41;10277:4;10355:24;:15;10373:6;10355:24;:::i;:::-;10423:20;;10466:4;;10493:5;;10531:97;;;;;;;;10423:20;10531:97;;;10606:19;;10423:20;10606:19;;;10531:97;;;;;;;;10642:64;;;;;;;10684:5;;;;10642:64;;;;;;;;;10277:439;;;;;;;;;;;;;;;10394:7;;10423:20;;;;10466:4;;;;10493:5;;10513:4;;10531:97;;10277:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10726:4:41;;10751:5;;10779:4;;10726:59;;;;;:4;10751:5;;;10726:59;;;11570:34:104;10726:4:41;11620:18:104;;;11613:34;10762:7:41;11663:18:104;;;11656:34;10779:4:41;;;11706:18:104;;;11699:43;10726:4:41;;;-1:-1:-1;10726:16:41;;-1:-1:-1;11481:19:104;;10726:59:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10795:2;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10857:4:41;;10881:5;;10857:34;;;;;:4;10881:5;;;10857:34;;;4929:74:104;10820:34:41;5019:18:104;;;5012:34;;;10820::41;-1:-1:-1;10857:4:41;;;-1:-1:-1;10857:15:41;;4902:18:104;;10857:34:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10910:10;;;;10930:6;;10820:71;;-1:-1:-1;10901:37:41;;10930:6;;10901:8;:37::i;:::-;10957:24;;;;10991:20;;10948:65;;10957:24;10991:20;;10948:8;:65::i;:::-;11032:12;;;;11054:4;;11023:37;;11032:12;11054:4;;11023:8;:37::i;:::-;11079:9;;;;11098:5;;11070:35;;11079:9;11098:5;;11070:8;:35::i;:::-;11124:10;;;;11115:54;;;;11143:24;:15;11161:6;11143:24;:::i;11115:54::-;11179:33;11188:3;:17;;;11179:33;;11207:4;11179:8;:33::i;:::-;11231:9;;11222:28;;11242:7;11222:8;:28::i;7033:609::-;7105:2;;7122:5;;7105:24;;;;;:2;7122:5;;;7105:24;;;352:74:104;7105:2:41;;;;;;:8;;325:18:104;;7105:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7139:2:41;;:47;;;;;7185:2:104;7139:47:41;;;7167:21:104;7224:2;7204:18;;;7197:30;7263;7243:18;;;7236:58;7139:2:41;;;;;;;-1:-1:-1;7139:15:41;;-1:-1:-1;7311:18:104;;7139:47:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7196:4:41;;7232:5;;7196:4;;;;;-1:-1:-1;7196:14:41;;-1:-1:-1;7232:5:41;7196:4;7274:24;:15;7292:6;7274:24;:::i;:::-;7342:20;;7385:4;;7412:5;;7450:97;;;;;;;;7342:20;7450:97;;;7525:19;;7342:20;7525:19;;;7450:97;;;;;;;;7561:64;;;;;;;7603:5;;;;7561:64;;;;;;;;;7196:439;;;;;;;;;;;;;;;7313:7;;7342:20;;;;7385:4;;;;7412:5;;7432:4;;7450:97;;7196:439;;;:::i;3993:262:79:-;4055:1;4050;:6;4046:203;;4077:41;;;;;11955:2:104;11937:21;;;11994:2;11974:18;;;11967:30;12033:34;12028:2;12013:18;;12006:62;12104:4;12099:2;12084:18;;12077:32;12141:3;12126:19;;11753:398;4077:41:79;;;;;;;;4137:31;4166:1;4137:31;;;;;;:::i;:::-;;;;;;;;4187;4216:1;4187:31;;;;;;:::i;:::-;;;;;;;;4232:6;1853;:13;;;;;;;;1818:55;4232:6;3993:262;;:::o;2406:277::-;2474:1;2469:6;;:1;:6;;;2465:212;;2496:44;;;;;13392:2:104;13374:21;;;13431:2;13411:18;;;13404:30;13470:34;13465:2;13450:18;;13443:62;13541:7;13536:2;13521:18;;13514:35;13581:3;13566:19;;13190:401;2496:44:79;;;;;;;;2559:34;2591:1;2559:34;;;;;;:::i;:::-;;;;;;;;2612;2644:1;2612:34;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;437:282:104:-;477:3;508:1;504:6;501:1;498:13;495:193;;;544:77;541:1;534:88;645:4;642:1;635:15;673:4;670:1;663:15;495:193;-1:-1:-1;704:9:104;;437:282::o;928:1245::-;1489:42;1558:15;;;1540:34;;1605:2;1590:18;;;1583:34;;;1665:26;1653:39;;1648:2;1633:18;;1626:67;1724:2;1709:18;;1702:34;;;1773:15;;;1767:3;1752:19;;1745:44;1826:15;;;1820:3;1805:19;;1798:44;1879:15;;;1873:3;1858:19;;1851:44;1914:6;1957:15;;;1951:3;1936:19;;1929:44;2014:13;;2010:22;2004:3;1989:19;;1982:51;2080:15;;2074:22;2070:31;2064:3;2049:19;;2042:60;1466:3;1451:19;;2111:56;2162:3;2147:19;;2139:6;803:12;;817:42;799:61;787:74;;910:4;899:16;;;893:23;877:14;;870:47;724:199;2111:56;928:1245;;;;;;;;;;;;;:::o;2768:184::-;2838:6;2891:2;2879:9;2870:7;2866:23;2862:32;2859:52;;;2907:1;2904;2897:12;2859:52;-1:-1:-1;2930:16:104;;2768:184;-1:-1:-1;2768:184:104:o;3147:200::-;3226:13;;3279:42;3268:54;;3258:65;;3248:93;;3337:1;3334;3327:12;3248:93;3147:200;;;:::o;3352:208::-;3422:6;3475:2;3463:9;3454:7;3450:23;3446:32;3443:52;;;3491:1;3488;3481:12;3443:52;3514:40;3544:9;3514:40;:::i;:::-;3504:50;3352:208;-1:-1:-1;;;3352:208:104:o;6017:277::-;6084:6;6137:2;6125:9;6116:7;6112:23;6108:32;6105:52;;;6153:1;6150;6143:12;6105:52;6185:9;6179:16;6238:5;6231:13;6224:21;6217:5;6214:32;6204:60;;6260:1;6257;6250:12;7747:406;7814:4;7808:11;;;7846:17;;7893:18;7878:34;;7914:22;;;7875:62;7872:242;;;7970:77;7967:1;7960:88;8071:4;8068:1;8061:15;8099:4;8096:1;8089:15;7872:242;8130:4;8123:24;7747:406;:::o;8158:409::-;8230:2;8224:9;8272:6;8260:19;;8309:18;8294:34;;8330:22;;;8291:62;8288:242;;;8386:77;8383:1;8376:88;8487:4;8484:1;8477:15;8515:4;8512:1;8505:15;8572:183;8650:13;;8703:26;8692:38;;8682:49;;8672:77;;8745:1;8742;8735:12;8760:163;8838:13;;8891:6;8880:18;;8870:29;;8860:57;;8913:1;8910;8903:12;8928:300;8995:5;9043:4;9031:9;9026:3;9022:19;9018:30;9015:50;;;9061:1;9058;9051:12;9015:50;9083:17;;:::i;:::-;9074:26;;9123:40;9153:9;9123:40;:::i;:::-;9116:5;9109:55;9217:2;9206:9;9202:18;9196:25;9191:2;9184:5;9180:14;9173:49;8928:300;;;;:::o;9233:324::-;9301:5;9349:4;9337:9;9332:3;9328:19;9324:30;9321:50;;;9367:1;9364;9357:12;9321:50;9389:17;;:::i;:::-;9380:26;;9429:39;9458:9;9429:39;:::i;:::-;9422:5;9415:54;9501:49;9546:2;9535:9;9531:18;9501:49;:::i;:::-;9496:2;9489:5;9485:14;9478:73;9233:324;;;;:::o;9562:990::-;9657:6;9710:3;9698:9;9689:7;9685:23;9681:33;9678:53;;;9727:1;9724;9717:12;9678:53;9753:22;;:::i;:::-;9804:9;9798:16;9791:5;9784:31;9847:49;9892:2;9881:9;9877:18;9847:49;:::i;:::-;9842:2;9835:5;9831:14;9824:73;9929:48;9973:2;9962:9;9958:18;9929:48;:::i;:::-;9924:2;9917:5;9913:14;9906:72;10010:49;10055:2;10044:9;10040:18;10010:49;:::i;:::-;10005:2;9998:5;9994:14;9987:73;10093:49;10137:3;10126:9;10122:19;10093:49;:::i;:::-;10087:3;10080:5;10076:15;10069:74;10176:50;10221:3;10210:9;10206:19;10176:50;:::i;:::-;10170:3;10163:5;10159:15;10152:75;10260:50;10305:3;10294:9;10290:19;10260:50;:::i;:::-;10254:3;10247:5;10243:15;10236:75;10344:68;10404:7;10398:3;10387:9;10383:19;10344:68;:::i;:::-;10338:3;10331:5;10327:15;10320:93;10449:72;10513:7;10504:6;10493:9;10489:22;10449:72;:::i;:::-;10440:6;10429:18;;10422:100;10433:5;9562:990;-1:-1:-1;;;9562:990:104:o;12320:348::-;12550:2;12539:9;12532:21;12513:4;12570:49;12615:2;12604:9;12600:18;12233:2;12221:15;;12268:12;12261:4;12252:14;;12245:36;12306:2;12297:12;;12156:159;12570:49;12562:57;;12655:6;12650:2;12639:9;12635:18;12628:34;12320:348;;;;:::o;12837:::-;13067:2;13056:9;13049:21;13030:4;13087:49;13132:2;13121:9;13117:18;12750:2;12738:15;;12785:12;12778:4;12769:14;;12762:36;12823:2;12814:12;;12673:159;13596:397;13826:2;13815:9;13808:21;13789:4;13846:49;13891:2;13880:9;13876:18;12233:2;12221:15;;12268:12;12261:4;12252:14;;12245:36;12306:2;12297:12;;12156:159;13846:49;13838:57;;13943:42;13935:6;13931:55;13926:2;13915:9;13911:18;13904:83;13596:397;;;;:::o;13998:::-;14228:2;14217:9;14210:21;14191:4;14248:49;14293:2;14282:9;14278:18;12750:2;12738:15;;12785:12;12778:4;12769:14;;12762:36;12823:2;12814:12;;12673:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testRevert_CreateAskMinimalModuleNotApproved()": "ab3a31b1",
    "testRevert_CreateAskMinimalNotTokenOwnerOrOperator()": "30833941",
    "testRevert_CreateAskMinimalTransferHelperNotApproved()": "a5602293",
    "testRevert_CreateAskModuleNotApproved()": "ccd2f29c",
    "testRevert_CreateAskNotTokenOwnerOrOperator()": "eb198baa",
    "testRevert_CreateAskTransferHelperNotApproved()": "0af0971a",
    "test_CancelAsk()": "6c98ba88",
    "test_CreateAsk()": "50270661",
    "test_CreateAskMinimal()": "be9e499c",
    "test_FillAsk()": "06bac521",
    "test_SetPrice()": "cd585530"
  },
  "ast": {
    "absolutePath": "contracts/test/modules/Asks/Omnibus/AsksOmnibus.t.sol",
    "id": 19798,
    "exportedSymbols": {
      "AsksDataStorage": [
        3144
      ],
      "AsksOmnibus": [
        4061
      ],
      "AsksOmnibusTest": [
        19797
      ],
      "DSTest": [
        54737
      ],
      "ERC20TransferHelper": [
        52989
      ],
      "ERC721TransferHelper": [
        53056
      ],
      "RoyaltyEngine": [
        51965
      ],
      "TestERC20": [
        52348
      ],
      "TestERC721": [
        52379
      ],
      "VM": [
        51877
      ],
      "WETH": [
        52636
      ],
      "ZoraModuleManager": [
        379
      ],
      "ZoraProtocolFeeSettings": [
        744
      ],
      "ZoraRegistrar": [
        52680
      ],
      "Zorb": [
        52796
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:12856:41",
    "nodes": [
      {
        "id": 18133,
        "nodeType": "PragmaDirective",
        "src": "36:23:41",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 18135,
        "nodeType": "ImportDirective",
        "src": "61:40:41",
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 54738,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18134,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:6:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18137,
        "nodeType": "ImportDirective",
        "src": "103:77:41",
        "absolutePath": "contracts/modules/Asks/Omnibus/AsksOmnibus.sol",
        "file": "../../../../modules/Asks/Omnibus/AsksOmnibus.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 4062,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18136,
              "name": "AsksOmnibus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "111:11:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18139,
        "nodeType": "ImportDirective",
        "src": "181:85:41",
        "absolutePath": "contracts/modules/Asks/Omnibus/AsksDataStorage.sol",
        "file": "../../../../modules/Asks/Omnibus/AsksDataStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 3145,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18138,
              "name": "AsksDataStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "189:15:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18141,
        "nodeType": "ImportDirective",
        "src": "267:51:41",
        "absolutePath": "contracts/test/utils/users/Zorb.sol",
        "file": "../../../utils/users/Zorb.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 52797,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18140,
              "name": "Zorb",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "275:4:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18143,
        "nodeType": "ImportDirective",
        "src": "319:69:41",
        "absolutePath": "contracts/test/utils/users/ZoraRegistrar.sol",
        "file": "../../../utils/users/ZoraRegistrar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 52681,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18142,
              "name": "ZoraRegistrar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "327:13:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18145,
        "nodeType": "ImportDirective",
        "src": "389:68:41",
        "absolutePath": "contracts/ZoraModuleManager.sol",
        "file": "../../../../ZoraModuleManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 380,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18144,
              "name": "ZoraModuleManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "397:17:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18147,
        "nodeType": "ImportDirective",
        "src": "458:114:41",
        "absolutePath": "contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol",
        "file": "../../../../auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 745,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18146,
              "name": "ZoraProtocolFeeSettings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "466:23:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18149,
        "nodeType": "ImportDirective",
        "src": "573:88:41",
        "absolutePath": "contracts/transferHelpers/ERC20TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC20TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 52990,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18148,
              "name": "ERC20TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "581:19:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18151,
        "nodeType": "ImportDirective",
        "src": "662:90:41",
        "absolutePath": "contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC721TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 53057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18150,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "670:20:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18153,
        "nodeType": "ImportDirective",
        "src": "753:71:41",
        "absolutePath": "contracts/test/utils/modules/RoyaltyEngine.sol",
        "file": "../../../utils/modules/RoyaltyEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 51966,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18152,
              "name": "RoyaltyEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "761:13:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18155,
        "nodeType": "ImportDirective",
        "src": "825:62:41",
        "absolutePath": "contracts/test/utils/tokens/TestERC20.sol",
        "file": "../../../utils/tokens/TestERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 52349,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18154,
              "name": "TestERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "833:9:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18157,
        "nodeType": "ImportDirective",
        "src": "888:64:41",
        "absolutePath": "contracts/test/utils/tokens/TestERC721.sol",
        "file": "../../../utils/tokens/TestERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 52380,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18156,
              "name": "TestERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "896:10:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18159,
        "nodeType": "ImportDirective",
        "src": "953:52:41",
        "absolutePath": "contracts/test/utils/tokens/WETH.sol",
        "file": "../../../utils/tokens/WETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 52637,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18158,
              "name": "WETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "961:4:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18161,
        "nodeType": "ImportDirective",
        "src": "1006:41:41",
        "absolutePath": "contracts/test/utils/VM.sol",
        "file": "../../../utils/VM.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19798,
        "sourceUnit": 51878,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18160,
              "name": "VM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1014:2:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 19797,
        "nodeType": "ContractDefinition",
        "src": "1149:11742:41",
        "nodes": [
          {
            "id": 18167,
            "nodeType": "VariableDeclaration",
            "src": "1190:14:41",
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "1202:2:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VM_$51877",
              "typeString": "contract VM"
            },
            "typeName": {
              "id": 18166,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18165,
                "name": "VM",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51877,
                "src": "1190:2:41"
              },
              "referencedDeclaration": 51877,
              "src": "1190:2:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VM_$51877",
                "typeString": "contract VM"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18170,
            "nodeType": "VariableDeclaration",
            "src": "1211:32:41",
            "constant": false,
            "mutability": "mutable",
            "name": "registrar",
            "nameLocation": "1234:9:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
              "typeString": "contract ZoraRegistrar"
            },
            "typeName": {
              "id": 18169,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18168,
                "name": "ZoraRegistrar",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52680,
                "src": "1211:13:41"
              },
              "referencedDeclaration": 52680,
              "src": "1211:13:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                "typeString": "contract ZoraRegistrar"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18173,
            "nodeType": "VariableDeclaration",
            "src": "1249:37:41",
            "constant": false,
            "mutability": "mutable",
            "name": "ZPFS",
            "nameLocation": "1282:4:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
              "typeString": "contract ZoraProtocolFeeSettings"
            },
            "typeName": {
              "id": 18172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18171,
                "name": "ZoraProtocolFeeSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 744,
                "src": "1249:23:41"
              },
              "referencedDeclaration": 744,
              "src": "1249:23:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                "typeString": "contract ZoraProtocolFeeSettings"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18176,
            "nodeType": "VariableDeclaration",
            "src": "1292:30:41",
            "constant": false,
            "mutability": "mutable",
            "name": "ZMM",
            "nameLocation": "1319:3:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
              "typeString": "contract ZoraModuleManager"
            },
            "typeName": {
              "id": 18175,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18174,
                "name": "ZoraModuleManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 379,
                "src": "1292:17:41"
              },
              "referencedDeclaration": 379,
              "src": "1292:17:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                "typeString": "contract ZoraModuleManager"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18179,
            "nodeType": "VariableDeclaration",
            "src": "1328:48:41",
            "constant": false,
            "mutability": "mutable",
            "name": "erc20TransferHelper",
            "nameLocation": "1357:19:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
              "typeString": "contract ERC20TransferHelper"
            },
            "typeName": {
              "id": 18178,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18177,
                "name": "ERC20TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52989,
                "src": "1328:19:41"
              },
              "referencedDeclaration": 52989,
              "src": "1328:19:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                "typeString": "contract ERC20TransferHelper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18182,
            "nodeType": "VariableDeclaration",
            "src": "1382:50:41",
            "constant": false,
            "mutability": "mutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1412:20:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 18181,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18180,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53056,
                "src": "1382:20:41"
              },
              "referencedDeclaration": 53056,
              "src": "1382:20:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18185,
            "nodeType": "VariableDeclaration",
            "src": "1438:36:41",
            "constant": false,
            "mutability": "mutable",
            "name": "royaltyEngine",
            "nameLocation": "1461:13:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
              "typeString": "contract RoyaltyEngine"
            },
            "typeName": {
              "id": 18184,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18183,
                "name": "RoyaltyEngine",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51965,
                "src": "1438:13:41"
              },
              "referencedDeclaration": 51965,
              "src": "1438:13:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
                "typeString": "contract RoyaltyEngine"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18188,
            "nodeType": "VariableDeclaration",
            "src": "1481:25:41",
            "constant": false,
            "mutability": "mutable",
            "name": "asks",
            "nameLocation": "1502:4:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
              "typeString": "contract AsksOmnibus"
            },
            "typeName": {
              "id": 18187,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18186,
                "name": "AsksOmnibus",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4061,
                "src": "1481:11:41"
              },
              "referencedDeclaration": 4061,
              "src": "1481:11:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                "typeString": "contract AsksOmnibus"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18191,
            "nodeType": "VariableDeclaration",
            "src": "1512:24:41",
            "constant": false,
            "mutability": "mutable",
            "name": "erc20",
            "nameLocation": "1531:5:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC20_$52348",
              "typeString": "contract TestERC20"
            },
            "typeName": {
              "id": 18190,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18189,
                "name": "TestERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52348,
                "src": "1512:9:41"
              },
              "referencedDeclaration": 52348,
              "src": "1512:9:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC20_$52348",
                "typeString": "contract TestERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18194,
            "nodeType": "VariableDeclaration",
            "src": "1542:25:41",
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1562:5:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC721_$52379",
              "typeString": "contract TestERC721"
            },
            "typeName": {
              "id": 18193,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18192,
                "name": "TestERC721",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52379,
                "src": "1542:10:41"
              },
              "referencedDeclaration": 52379,
              "src": "1542:10:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC721_$52379",
                "typeString": "contract TestERC721"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18197,
            "nodeType": "VariableDeclaration",
            "src": "1573:18:41",
            "constant": false,
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "1587:4:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WETH_$52636",
              "typeString": "contract WETH"
            },
            "typeName": {
              "id": 18196,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18195,
                "name": "WETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52636,
                "src": "1573:4:41"
              },
              "referencedDeclaration": 52636,
              "src": "1573:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WETH_$52636",
                "typeString": "contract WETH"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18200,
            "nodeType": "VariableDeclaration",
            "src": "1598:20:41",
            "constant": false,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "1612:6:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18199,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18198,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1598:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1598:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18203,
            "nodeType": "VariableDeclaration",
            "src": "1624:34:41",
            "constant": false,
            "mutability": "mutable",
            "name": "sellerFundsRecipient",
            "nameLocation": "1638:20:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18202,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18201,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1624:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1624:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18206,
            "nodeType": "VariableDeclaration",
            "src": "1664:22:41",
            "constant": false,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1678:8:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18204,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1664:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1664:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18209,
            "nodeType": "VariableDeclaration",
            "src": "1692:20:41",
            "constant": false,
            "mutability": "mutable",
            "name": "finder",
            "nameLocation": "1706:6:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18208,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18207,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1692:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1692:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18212,
            "nodeType": "VariableDeclaration",
            "src": "1718:33:41",
            "constant": false,
            "mutability": "mutable",
            "name": "listingFeeRecipient",
            "nameLocation": "1732:19:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18211,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18210,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1718:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1718:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18215,
            "nodeType": "VariableDeclaration",
            "src": "1757:30:41",
            "constant": false,
            "mutability": "mutable",
            "name": "royaltyRecipient",
            "nameLocation": "1771:16:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18214,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18213,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1757:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1757:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18218,
            "nodeType": "VariableDeclaration",
            "src": "1793:19:41",
            "constant": false,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "1807:5:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18217,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18216,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1793:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1793:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18221,
            "nodeType": "VariableDeclaration",
            "src": "1818:19:41",
            "constant": false,
            "mutability": "mutable",
            "name": "other",
            "nameLocation": "1832:5:41",
            "scope": 19797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Zorb_$52796",
              "typeString": "contract Zorb"
            },
            "typeName": {
              "id": 18220,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18219,
                "name": "Zorb",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52796,
                "src": "1818:4:41"
              },
              "referencedDeclaration": 52796,
              "src": "1818:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Zorb_$52796",
                "typeString": "contract Zorb"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18594,
            "nodeType": "FunctionDefinition",
            "src": "1844:2313:41",
            "body": {
              "id": 18593,
              "nodeType": "Block",
              "src": "1868:2289:41",
              "statements": [
                {
                  "expression": {
                    "id": 18228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18224,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18167,
                      "src": "1900:2:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VM_$51877",
                        "typeString": "contract VM"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 18226,
                          "name": "HEVM_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53164,
                          "src": "1908:12:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18225,
                        "name": "VM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51877,
                        "src": "1905:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VM_$51877_$",
                          "typeString": "type(contract VM)"
                        }
                      },
                      "id": 18227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1905:16:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VM_$51877",
                        "typeString": "contract VM"
                      }
                    },
                    "src": "1900:21:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VM_$51877",
                      "typeString": "contract VM"
                    }
                  },
                  "id": 18229,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:21:41"
                },
                {
                  "expression": {
                    "id": 18235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18230,
                      "name": "registrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18170,
                      "src": "1953:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                        "typeString": "contract ZoraRegistrar"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 18233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1965:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ZoraRegistrar_$52680_$",
                          "typeString": "function () returns (contract ZoraRegistrar)"
                        },
                        "typeName": {
                          "id": 18232,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18231,
                            "name": "ZoraRegistrar",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52680,
                            "src": "1969:13:41"
                          },
                          "referencedDeclaration": 52680,
                          "src": "1969:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                            "typeString": "contract ZoraRegistrar"
                          }
                        }
                      },
                      "id": 18234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1965:19:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                        "typeString": "contract ZoraRegistrar"
                      }
                    },
                    "src": "1953:31:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                      "typeString": "contract ZoraRegistrar"
                    }
                  },
                  "id": 18236,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:31:41"
                },
                {
                  "expression": {
                    "id": 18242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18237,
                      "name": "ZPFS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18173,
                      "src": "1994:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                        "typeString": "contract ZoraProtocolFeeSettings"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 18240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2001:27:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ZoraProtocolFeeSettings_$744_$",
                          "typeString": "function () returns (contract ZoraProtocolFeeSettings)"
                        },
                        "typeName": {
                          "id": 18239,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18238,
                            "name": "ZoraProtocolFeeSettings",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 744,
                            "src": "2005:23:41"
                          },
                          "referencedDeclaration": 744,
                          "src": "2005:23:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                            "typeString": "contract ZoraProtocolFeeSettings"
                          }
                        }
                      },
                      "id": 18241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2001:29:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                        "typeString": "contract ZoraProtocolFeeSettings"
                      }
                    },
                    "src": "1994:36:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                      "typeString": "contract ZoraProtocolFeeSettings"
                    }
                  },
                  "id": 18243,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:36:41"
                },
                {
                  "expression": {
                    "id": 18257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18244,
                      "name": "ZMM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18176,
                      "src": "2040:3:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                        "typeString": "contract ZoraModuleManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18250,
                              "name": "registrar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18170,
                              "src": "2076:9:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                                "typeString": "contract ZoraRegistrar"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                                "typeString": "contract ZoraRegistrar"
                              }
                            ],
                            "id": 18249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2068:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2068:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2068:18:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 18254,
                              "name": "ZPFS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18173,
                              "src": "2096:4:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                                "typeString": "contract ZoraProtocolFeeSettings"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                                "typeString": "contract ZoraProtocolFeeSettings"
                              }
                            ],
                            "id": 18253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2088:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18252,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2088:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2088:13:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2046:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_ZoraModuleManager_$379_$",
                          "typeString": "function (address,address) returns (contract ZoraModuleManager)"
                        },
                        "typeName": {
                          "id": 18246,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18245,
                            "name": "ZoraModuleManager",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 379,
                            "src": "2050:17:41"
                          },
                          "referencedDeclaration": 379,
                          "src": "2050:17:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                            "typeString": "contract ZoraModuleManager"
                          }
                        }
                      },
                      "id": 18256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2046:56:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                        "typeString": "contract ZoraModuleManager"
                      }
                    },
                    "src": "2040:62:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                      "typeString": "contract ZoraModuleManager"
                    }
                  },
                  "id": 18258,
                  "nodeType": "ExpressionStatement",
                  "src": "2040:62:41"
                },
                {
                  "expression": {
                    "id": 18268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18259,
                      "name": "erc20TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18179,
                      "src": "2112:19:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                        "typeString": "contract ERC20TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18265,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2166:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2158:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18263,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2158:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2158:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2134:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ERC20TransferHelper_$52989_$",
                          "typeString": "function (address) returns (contract ERC20TransferHelper)"
                        },
                        "typeName": {
                          "id": 18261,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18260,
                            "name": "ERC20TransferHelper",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52989,
                            "src": "2138:19:41"
                          },
                          "referencedDeclaration": 52989,
                          "src": "2138:19:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                            "typeString": "contract ERC20TransferHelper"
                          }
                        }
                      },
                      "id": 18267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2134:37:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                        "typeString": "contract ERC20TransferHelper"
                      }
                    },
                    "src": "2112:59:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                      "typeString": "contract ERC20TransferHelper"
                    }
                  },
                  "id": 18269,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:59:41"
                },
                {
                  "expression": {
                    "id": 18279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18270,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18182,
                      "src": "2181:20:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18276,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2237:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2229:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18274,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2229:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2229:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2204:24:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ERC721TransferHelper_$53056_$",
                          "typeString": "function (address) returns (contract ERC721TransferHelper)"
                        },
                        "typeName": {
                          "id": 18272,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18271,
                            "name": "ERC721TransferHelper",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53056,
                            "src": "2208:20:41"
                          },
                          "referencedDeclaration": 53056,
                          "src": "2208:20:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                            "typeString": "contract ERC721TransferHelper"
                          }
                        }
                      },
                      "id": 18278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2204:38:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "2181:61:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 18280,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:61:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18284,
                        "name": "ZMM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18176,
                        "src": "2287:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                          "typeString": "contract ZoraModuleManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                          "typeString": "contract ZoraModuleManager"
                        }
                      ],
                      "expression": {
                        "id": 18281,
                        "name": "registrar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18170,
                        "src": "2272:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                          "typeString": "contract ZoraRegistrar"
                        }
                      },
                      "id": 18283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52655,
                      "src": "2272:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ZoraModuleManager_$379_$returns$__$",
                        "typeString": "function (contract ZoraModuleManager) external"
                      }
                    },
                    "id": 18285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:19:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18286,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:19:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18292,
                            "name": "ZMM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18176,
                            "src": "2319:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                              "typeString": "contract ZoraModuleManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                              "typeString": "contract ZoraModuleManager"
                            }
                          ],
                          "id": 18291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2311:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2311:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2311:12:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2333:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2325:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2325:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2325:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18287,
                        "name": "ZPFS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18173,
                        "src": "2301:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                          "typeString": "contract ZoraProtocolFeeSettings"
                        }
                      },
                      "id": 18289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 504,
                      "src": "2301:9:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 18298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2301:35:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18299,
                  "nodeType": "ExpressionStatement",
                  "src": "2301:35:41"
                },
                {
                  "expression": {
                    "id": 18309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18300,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18200,
                      "src": "2371:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18306,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2397:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2389:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18304,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2389:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2389:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2380:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18302,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18301,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2384:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2384:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2380:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2371:31:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18310,
                  "nodeType": "ExpressionStatement",
                  "src": "2371:31:41"
                },
                {
                  "expression": {
                    "id": 18320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18311,
                      "name": "sellerFundsRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18203,
                      "src": "2412:20:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18317,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2452:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2444:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18315,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2444:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2444:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2435:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18313,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18312,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2439:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2439:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2435:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2412:45:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18321,
                  "nodeType": "ExpressionStatement",
                  "src": "2412:45:41"
                },
                {
                  "expression": {
                    "id": 18331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18322,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18206,
                      "src": "2467:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18328,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2495:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2487:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18326,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2487:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2487:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2478:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18324,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18323,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2482:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2482:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2478:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2467:33:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18332,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:33:41"
                },
                {
                  "expression": {
                    "id": 18342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18333,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18218,
                      "src": "2510:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18339,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2535:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2527:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18337,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2527:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2527:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2518:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18335,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18334,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2522:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2522:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2518:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2510:30:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18343,
                  "nodeType": "ExpressionStatement",
                  "src": "2510:30:41"
                },
                {
                  "expression": {
                    "id": 18353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18344,
                      "name": "finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18209,
                      "src": "2550:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18350,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2576:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2568:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18348,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2568:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2568:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2559:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18346,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18345,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2563:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2563:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2559:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2550:31:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18354,
                  "nodeType": "ExpressionStatement",
                  "src": "2550:31:41"
                },
                {
                  "expression": {
                    "id": 18364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18355,
                      "name": "royaltyRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18215,
                      "src": "2591:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18361,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2627:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2619:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18359,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2619:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2619:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2610:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18357,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18356,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2614:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2614:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2610:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2591:41:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18365,
                  "nodeType": "ExpressionStatement",
                  "src": "2591:41:41"
                },
                {
                  "expression": {
                    "id": 18375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18366,
                      "name": "listingFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18212,
                      "src": "2642:19:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18372,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2681:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2673:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18370,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2673:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2673:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2664:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18368,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18367,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2668:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2668:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2664:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2642:44:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18376,
                  "nodeType": "ExpressionStatement",
                  "src": "2642:44:41"
                },
                {
                  "expression": {
                    "id": 18386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18377,
                      "name": "other",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18221,
                      "src": "2696:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18383,
                              "name": "ZMM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18176,
                              "src": "2721:3:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                                "typeString": "contract ZoraModuleManager"
                              }
                            ],
                            "id": 18382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2713:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18381,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2713:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2713:12:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2704:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Zorb_$52796_$",
                          "typeString": "function (address) returns (contract Zorb)"
                        },
                        "typeName": {
                          "id": 18379,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18378,
                            "name": "Zorb",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52796,
                            "src": "2708:4:41"
                          },
                          "referencedDeclaration": 52796,
                          "src": "2708:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Zorb_$52796",
                            "typeString": "contract Zorb"
                          }
                        }
                      },
                      "id": 18385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2704:22:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Zorb_$52796",
                        "typeString": "contract Zorb"
                      }
                    },
                    "src": "2696:30:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Zorb_$52796",
                      "typeString": "contract Zorb"
                    }
                  },
                  "id": 18387,
                  "nodeType": "ExpressionStatement",
                  "src": "2696:30:41"
                },
                {
                  "expression": {
                    "id": 18397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18388,
                      "name": "royaltyEngine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18185,
                      "src": "2761:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
                        "typeString": "contract RoyaltyEngine"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18394,
                              "name": "royaltyRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18215,
                              "src": "2803:16:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Zorb_$52796",
                                "typeString": "contract Zorb"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Zorb_$52796",
                                "typeString": "contract Zorb"
                              }
                            ],
                            "id": 18393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2795:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18392,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2795:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2795:25:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2777:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_RoyaltyEngine_$51965_$",
                          "typeString": "function (address) returns (contract RoyaltyEngine)"
                        },
                        "typeName": {
                          "id": 18390,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18389,
                            "name": "RoyaltyEngine",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 51965,
                            "src": "2781:13:41"
                          },
                          "referencedDeclaration": 51965,
                          "src": "2781:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
                            "typeString": "contract RoyaltyEngine"
                          }
                        }
                      },
                      "id": 18396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2777:44:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
                        "typeString": "contract RoyaltyEngine"
                      }
                    },
                    "src": "2761:60:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
                      "typeString": "contract RoyaltyEngine"
                    }
                  },
                  "id": 18398,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:60:41"
                },
                {
                  "expression": {
                    "id": 18404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18399,
                      "name": "erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18191,
                      "src": "2831:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$52348",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 18402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2839:13:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestERC20_$52348_$",
                          "typeString": "function () returns (contract TestERC20)"
                        },
                        "typeName": {
                          "id": 18401,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18400,
                            "name": "TestERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52348,
                            "src": "2843:9:41"
                          },
                          "referencedDeclaration": 52348,
                          "src": "2843:9:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC20_$52348",
                            "typeString": "contract TestERC20"
                          }
                        }
                      },
                      "id": 18403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2839:15:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$52348",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "src": "2831:23:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20_$52348",
                      "typeString": "contract TestERC20"
                    }
                  },
                  "id": 18405,
                  "nodeType": "ExpressionStatement",
                  "src": "2831:23:41"
                },
                {
                  "expression": {
                    "id": 18411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18406,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18194,
                      "src": "2864:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC721_$52379",
                        "typeString": "contract TestERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 18409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2872:14:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestERC721_$52379_$",
                          "typeString": "function () returns (contract TestERC721)"
                        },
                        "typeName": {
                          "id": 18408,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18407,
                            "name": "TestERC721",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52379,
                            "src": "2876:10:41"
                          },
                          "referencedDeclaration": 52379,
                          "src": "2876:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC721_$52379",
                            "typeString": "contract TestERC721"
                          }
                        }
                      },
                      "id": 18410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2872:16:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC721_$52379",
                        "typeString": "contract TestERC721"
                      }
                    },
                    "src": "2864:24:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC721_$52379",
                      "typeString": "contract TestERC721"
                    }
                  },
                  "id": 18412,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:24:41"
                },
                {
                  "expression": {
                    "id": 18418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18413,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18197,
                      "src": "2898:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$52636",
                        "typeString": "contract WETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 18416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2905:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_WETH_$52636_$",
                          "typeString": "function () returns (contract WETH)"
                        },
                        "typeName": {
                          "id": 18415,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18414,
                            "name": "WETH",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52636,
                            "src": "2909:4:41"
                          },
                          "referencedDeclaration": 52636,
                          "src": "2909:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WETH_$52636",
                            "typeString": "contract WETH"
                          }
                        }
                      },
                      "id": 18417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2905:10:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$52636",
                        "typeString": "contract WETH"
                      }
                    },
                    "src": "2898:17:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WETH_$52636",
                      "typeString": "contract WETH"
                    }
                  },
                  "id": 18419,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:17:41"
                },
                {
                  "expression": {
                    "id": 18445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18420,
                      "name": "asks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18188,
                      "src": "2957:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                        "typeString": "contract AsksOmnibus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 18426,
                              "name": "erc20TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18179,
                              "src": "2988:19:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                                "typeString": "contract ERC20TransferHelper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                                "typeString": "contract ERC20TransferHelper"
                              }
                            ],
                            "id": 18425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2980:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18424,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2980:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2980:28:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 18430,
                              "name": "erc721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18182,
                              "src": "3018:20:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                                "typeString": "contract ERC721TransferHelper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                                "typeString": "contract ERC721TransferHelper"
                              }
                            ],
                            "id": 18429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3010:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18428,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3010:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3010:29:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 18434,
                              "name": "royaltyEngine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18185,
                              "src": "3049:13:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
                                "typeString": "contract RoyaltyEngine"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RoyaltyEngine_$51965",
                                "typeString": "contract RoyaltyEngine"
                              }
                            ],
                            "id": 18433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3041:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18432,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3041:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3041:22:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 18438,
                              "name": "ZPFS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18173,
                              "src": "3073:4:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                                "typeString": "contract ZoraProtocolFeeSettings"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ZoraProtocolFeeSettings_$744",
                                "typeString": "contract ZoraProtocolFeeSettings"
                              }
                            ],
                            "id": 18437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3065:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3065:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3065:13:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 18442,
                              "name": "weth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18197,
                              "src": "3088:4:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WETH_$52636",
                                "typeString": "contract WETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WETH_$52636",
                                "typeString": "contract WETH"
                              }
                            ],
                            "id": 18441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3080:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18440,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3080:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3080:13:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2964:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_AsksOmnibus_$4061_$",
                          "typeString": "function (address,address,address,address,address) returns (contract AsksOmnibus)"
                        },
                        "typeName": {
                          "id": 18422,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 18421,
                            "name": "AsksOmnibus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4061,
                            "src": "2968:11:41"
                          },
                          "referencedDeclaration": 4061,
                          "src": "2968:11:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                            "typeString": "contract AsksOmnibus"
                          }
                        }
                      },
                      "id": 18444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2964:130:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                        "typeString": "contract AsksOmnibus"
                      }
                    },
                    "src": "2957:137:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                      "typeString": "contract AsksOmnibus"
                    }
                  },
                  "id": 18446,
                  "nodeType": "ExpressionStatement",
                  "src": "2957:137:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18452,
                            "name": "asks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18188,
                            "src": "3137:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          ],
                          "id": 18451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3129:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3129:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3129:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18447,
                        "name": "registrar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18170,
                        "src": "3104:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraRegistrar_$52680",
                          "typeString": "contract ZoraRegistrar"
                        }
                      },
                      "id": 18449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerModule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52667,
                      "src": "3104:24:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:39:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18455,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:39:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18461,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "3194:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3186:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3186:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3186:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 18463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3203:9:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 18456,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "3178:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51828,
                      "src": "3178:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 18464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:35:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18465,
                  "nodeType": "ExpressionStatement",
                  "src": "3178:35:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18471,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "3239:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3231:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18469,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3231:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3231:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 18473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3247:9:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 18466,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "3223:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51828,
                      "src": "3223:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 18474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18475,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:34:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18481,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "3316:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3308:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18479,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3308:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3308:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3325:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 18476,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18194,
                        "src": "3297:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$52379",
                          "typeString": "contract TestERC721"
                        }
                      },
                      "id": 18478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52378,
                      "src": "3297:10:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 18484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3297:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18485,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18491,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "3399:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3391:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18489,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3391:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3391:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        "id": 18495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 18493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3407:1:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3936",
                          "id": 18494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3410:2:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "value": "96"
                        },
                        "src": "3407:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      ],
                      "expression": {
                        "id": 18486,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18191,
                        "src": "3380:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$52348",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 18488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52347,
                      "src": "3380:10:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 18496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:33:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18497,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:33:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18503,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "3482:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3474:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3474:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3474:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18498,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "3465:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "3465:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3465:24:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18506,
                  "nodeType": "ExpressionStatement",
                  "src": "3465:24:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 18507,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18197,
                          "src": "3499:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WETH_$52636",
                            "typeString": "contract WETH"
                          }
                        },
                        "id": 18509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52462,
                        "src": "3499:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 18511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3530",
                          "id": 18510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3519:8:41",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000000000000000000_by_1",
                            "typeString": "int_const 50000000000000000000"
                          },
                          "value": "50"
                        }
                      ],
                      "src": "3499:29:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 18512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3499:31:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18513,
                  "nodeType": "ExpressionStatement",
                  "src": "3499:31:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18519,
                            "name": "asks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18188,
                            "src": "3621:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          ],
                          "id": 18518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3613:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3613:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3613:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 18521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3628:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 18514,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18200,
                        "src": "3585:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zorb_$52796",
                          "typeString": "contract Zorb"
                        }
                      },
                      "id": 18516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForModule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52724,
                      "src": "3585:27:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 18522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3585:48:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18523,
                  "nodeType": "ExpressionStatement",
                  "src": "3585:48:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18529,
                            "name": "asks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18188,
                            "src": "3678:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          ],
                          "id": 18528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3670:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18527,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3670:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3670:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 18531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3685:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 18524,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18218,
                        "src": "3643:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zorb_$52796",
                          "typeString": "contract Zorb"
                        }
                      },
                      "id": 18526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForModule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52724,
                      "src": "3643:26:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 18532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:47:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18533,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:47:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18539,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "3765:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3757:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18537,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3757:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3757:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18534,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "3748:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "3748:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3748:25:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18542,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:25:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18548,
                            "name": "erc721TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18182,
                            "src": "3815:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          ],
                          "id": 18547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3807:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18546,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3807:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3807:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 18550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3838:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 18543,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18194,
                        "src": "3783:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$52379",
                          "typeString": "contract TestERC721"
                        }
                      },
                      "id": 18545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57578,
                      "src": "3783:23:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 18551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:60:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18552,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:60:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18558,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "3931:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3923:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18556,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3923:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3923:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18553,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "3914:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "3914:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3914:24:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18561,
                  "nodeType": "ExpressionStatement",
                  "src": "3914:24:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18567,
                            "name": "erc20TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18179,
                            "src": "3970:19:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                              "typeString": "contract ERC20TransferHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                              "typeString": "contract ERC20TransferHelper"
                            }
                          ],
                          "id": 18566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3962:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18565,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3962:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3962:28:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        "id": 18571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 18569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3992:1:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3936",
                          "id": 18570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3995:2:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "value": "96"
                        },
                        "src": "3992:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      ],
                      "expression": {
                        "id": 18562,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18191,
                        "src": "3948:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$52348",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "id": 18564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56534,
                      "src": "3948:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 18572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:50:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18573,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:50:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18579,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "4081:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4073:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18577,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4073:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4073:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18574,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "4064:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "4064:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4064:24:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18582,
                  "nodeType": "ExpressionStatement",
                  "src": "4064:24:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18588,
                            "name": "erc20TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18179,
                            "src": "4119:19:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                              "typeString": "contract ERC20TransferHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferHelper_$52989",
                              "typeString": "contract ERC20TransferHelper"
                            }
                          ],
                          "id": 18587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4111:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18586,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4111:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4111:28:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 18590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4141:8:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 18583,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18197,
                        "src": "4098:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WETH_$52636",
                          "typeString": "contract WETH"
                        }
                      },
                      "id": 18585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52539,
                      "src": "4098:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 18591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4098:52:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18592,
                  "nodeType": "ExpressionStatement",
                  "src": "4098:52:41"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1853:5:41",
            "parameters": {
              "id": 18222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1858:2:41"
            },
            "returnParameters": {
              "id": 18223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18721,
            "nodeType": "FunctionDefinition",
            "src": "4213:735:41",
            "body": {
              "id": 18720,
              "nodeType": "Block",
              "src": "4253:695:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18603,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "4280:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4272:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18601,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4272:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4272:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18598,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "4263:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "4263:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:25:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18606,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:25:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18612,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "4328:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 18611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4320:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18610,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4320:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4320:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4336:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 18615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4339:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 18607,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "4298:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 18609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAskMinimal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3379,
                      "src": "4298:21:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 18616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4298:49:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18617,
                  "nodeType": "ExpressionStatement",
                  "src": "4298:49:41"
                },
                {
                  "assignments": [
                    18622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18622,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "4388:3:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 18720,
                      "src": "4357:34:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                        "typeString": "struct AsksDataStorage.FullAsk"
                      },
                      "typeName": {
                        "id": 18621,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 18620,
                          "name": "AsksDataStorage.FullAsk",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2988,
                          "src": "4357:23:41"
                        },
                        "referencedDeclaration": 2988,
                        "src": "4357:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FullAsk_$2988_storage_ptr",
                          "typeString": "struct AsksDataStorage.FullAsk"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18631,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18627,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "4418:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 18626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4410:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18625,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4410:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4410:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4426:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 18623,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "4394:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 18624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFullAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "4394:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_struct$_FullAsk_$2988_memory_ptr_$",
                        "typeString": "function (address,uint256) view external returns (struct AsksDataStorage.FullAsk memory)"
                      }
                    },
                    "id": 18630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4394:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                      "typeString": "struct AsksDataStorage.FullAsk memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4357:71:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18633,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "4447:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18634,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2971,
                        "src": "4447:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18637,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "4467:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4459:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18635,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4459:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4459:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18632,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "4438:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4438:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18640,
                  "nodeType": "ExpressionStatement",
                  "src": "4438:37:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18642,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "4494:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2975,
                        "src": "4494:24:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4528:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4520:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4520:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4520:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18641,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "4485:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4485:46:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18649,
                  "nodeType": "ExpressionStatement",
                  "src": "4485:46:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18651,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "4550:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2979,
                        "src": "4550:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4572:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4564:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4564:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4564:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18650,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "4541:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4541:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18658,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:34:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18660,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "4594:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18661,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2981,
                        "src": "4594:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4613:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4605:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4605:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4605:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18659,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "4585:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4585:31:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18667,
                  "nodeType": "ExpressionStatement",
                  "src": "4585:31:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18669,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "4635:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2973,
                        "src": "4635:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4647:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 18668,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "4626:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4626:23:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18673,
                  "nodeType": "ExpressionStatement",
                  "src": "4626:23:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18675,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "4668:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18676,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "findersFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2977,
                        "src": "4668:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4687:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 18674,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "4659:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4659:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18679,
                  "nodeType": "ExpressionStatement",
                  "src": "4659:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18681,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "4708:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2969,
                        "src": "4708:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 18683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 18680,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "4699:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4699:28:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18685,
                  "nodeType": "ExpressionStatement",
                  "src": "4699:28:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18687,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18622,
                            "src": "4746:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 18688,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "4746:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 18689,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2512,
                        "src": "4746:19:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4775:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4767:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18690,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4767:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4767:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18686,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "4737:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4737:41:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18695,
                  "nodeType": "ExpressionStatement",
                  "src": "4737:41:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18697,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18622,
                            "src": "4797:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 18698,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "4797:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 18699,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2514,
                        "src": "4797:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4822:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 18696,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "4788:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:36:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18702,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:36:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18704,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18622,
                            "src": "4843:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 18705,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "4843:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 18706,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2507,
                        "src": "4843:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4873:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 18703,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "4834:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:41:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18709,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:41:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18711,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18622,
                            "src": "4894:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 18712,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "4894:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 18713,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2509,
                        "src": "4894:34:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4938:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4930:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18714,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4930:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4930:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18710,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "4885:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:56:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18719,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:56:41"
                }
              ]
            },
            "documentation": {
              "id": 18595,
              "nodeType": "StructuredDocumentation",
              "src": "4163:45:41",
              "text": "------------ CREATE ASK ------------ ///"
            },
            "functionSelector": "be9e499c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CreateAskMinimal",
            "nameLocation": "4222:21:41",
            "parameters": {
              "id": 18596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4243:2:41"
            },
            "returnParameters": {
              "id": 18597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4253:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18751,
            "nodeType": "FunctionDefinition",
            "src": "4954:226:41",
            "body": {
              "id": 18750,
              "nodeType": "Block",
              "src": "5023:157:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18729,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18221,
                            "src": "5050:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5042:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5042:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5042:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18724,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5033:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "5033:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:24:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18732,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:24:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 18736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5083:30:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "expression": {
                        "id": 18733,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5067:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51842,
                      "src": "5067:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 18737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5067:47:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18738,
                  "nodeType": "ExpressionStatement",
                  "src": "5067:47:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18744,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "5154:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 18743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5146:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18742,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5146:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5146:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5162:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 18747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5165:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 18739,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "5124:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 18741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAskMinimal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3379,
                      "src": "5124:21:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 18748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5124:49:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18749,
                  "nodeType": "ExpressionStatement",
                  "src": "5124:49:41"
                }
              ]
            },
            "functionSelector": "30833941",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_CreateAskMinimalNotTokenOwnerOrOperator",
            "nameLocation": "4963:50:41",
            "parameters": {
              "id": 18722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5013:2:41"
            },
            "returnParameters": {
              "id": 18723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5023:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18796,
            "nodeType": "FunctionDefinition",
            "src": "5186:300:41",
            "body": {
              "id": 18795,
              "nodeType": "Block",
              "src": "5249:237:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18759,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "5281:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5273:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5273:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5273:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18754,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5259:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51816,
                      "src": "5259:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5259:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18762,
                  "nodeType": "ExpressionStatement",
                  "src": "5259:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18768,
                            "name": "asks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18188,
                            "src": "5335:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          ],
                          "id": 18767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5327:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5327:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5327:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 18770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5342:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 18763,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18200,
                        "src": "5299:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zorb_$52796",
                          "typeString": "contract Zorb"
                        }
                      },
                      "id": 18765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForModule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52724,
                      "src": "5299:27:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 18771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5299:49:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18772,
                  "nodeType": "ExpressionStatement",
                  "src": "5299:49:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d4f44554c455f4e4f545f415050524f564544",
                        "id": 18776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5374:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ce1f58d242e04a0145e9441056f276e2caabf8317b62f839e48678a4e475429",
                          "typeString": "literal_string \"MODULE_NOT_APPROVED\""
                        },
                        "value": "MODULE_NOT_APPROVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0ce1f58d242e04a0145e9441056f276e2caabf8317b62f839e48678a4e475429",
                          "typeString": "literal_string \"MODULE_NOT_APPROVED\""
                        }
                      ],
                      "expression": {
                        "id": 18773,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5358:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51842,
                      "src": "5358:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 18777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5358:38:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18778,
                  "nodeType": "ExpressionStatement",
                  "src": "5358:38:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18784,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "5436:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 18783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5428:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18782,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5428:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5428:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5444:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 18787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5447:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 18779,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "5406:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 18781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAskMinimal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3379,
                      "src": "5406:21:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 18788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5406:49:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18789,
                  "nodeType": "ExpressionStatement",
                  "src": "5406:49:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 18790,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5465:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51820,
                      "src": "5465:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 18793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5465:14:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18794,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:14:41"
                }
              ]
            },
            "functionSelector": "ab3a31b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_CreateAskMinimalModuleNotApproved",
            "nameLocation": "5195:44:41",
            "parameters": {
              "id": 18752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5239:2:41"
            },
            "returnParameters": {
              "id": 18753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5249:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18841,
            "nodeType": "FunctionDefinition",
            "src": "5492:329:41",
            "body": {
              "id": 18840,
              "nodeType": "Block",
              "src": "5563:258:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18804,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "5595:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5587:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18802,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5587:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5587:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18799,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5573:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51816,
                      "src": "5573:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5573:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18807,
                  "nodeType": "ExpressionStatement",
                  "src": "5573:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18813,
                            "name": "erc721TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18182,
                            "src": "5645:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          ],
                          "id": 18812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5637:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5637:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5637:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 18815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5668:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 18808,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18194,
                        "src": "5613:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$52379",
                          "typeString": "contract TestERC721"
                        }
                      },
                      "id": 18810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57578,
                      "src": "5613:23:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 18816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5613:61:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18817,
                  "nodeType": "ExpressionStatement",
                  "src": "5613:61:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f48454c5045525f4e4f545f415050524f564544",
                        "id": 18821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5700:30:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53d5324656b187803e0b309626f1907482ca736d3d448cec071c474286cf4177",
                          "typeString": "literal_string \"TRANSFER_HELPER_NOT_APPROVED\""
                        },
                        "value": "TRANSFER_HELPER_NOT_APPROVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_53d5324656b187803e0b309626f1907482ca736d3d448cec071c474286cf4177",
                          "typeString": "literal_string \"TRANSFER_HELPER_NOT_APPROVED\""
                        }
                      ],
                      "expression": {
                        "id": 18818,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5684:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51842,
                      "src": "5684:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 18822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5684:47:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18823,
                  "nodeType": "ExpressionStatement",
                  "src": "5684:47:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18829,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "5771:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 18828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5763:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18827,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5763:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5763:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5779:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 18832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5782:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 18824,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "5741:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 18826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAskMinimal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3379,
                      "src": "5741:21:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 18833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:49:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18834,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:49:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 18835,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5800:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51820,
                      "src": "5800:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 18838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5800:14:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18839,
                  "nodeType": "ExpressionStatement",
                  "src": "5800:14:41"
                }
              ]
            },
            "functionSelector": "a5602293",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_CreateAskMinimalTransferHelperNotApproved",
            "nameLocation": "5501:52:41",
            "parameters": {
              "id": 18797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5553:2:41"
            },
            "returnParameters": {
              "id": 18798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5563:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19009,
            "nodeType": "FunctionDefinition",
            "src": "5827:1200:41",
            "body": {
              "id": 19008,
              "nodeType": "Block",
              "src": "5860:1167:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18849,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "5887:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5879:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18847,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5879:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5879:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 18844,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "5870:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 18846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "5870:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 18851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5870:25:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18852,
                  "nodeType": "ExpressionStatement",
                  "src": "5870:25:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18858,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "5941:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 18857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5933:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18856,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5933:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5933:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5961:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 18866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 18863,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5983:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 18864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5983:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 18865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6001:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "5983:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5976:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 18861,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "5976:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5976:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 18868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6022:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 18871,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "6051:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6043:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6043:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6043:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18875,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "6094:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 18874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6086:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6086:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6086:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18879,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "6121:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6113:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18877,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6113:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6113:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 18881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6141:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 18884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6202:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [
                              {
                                "id": 18887,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "6234:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 18886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6226:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 18885,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6226:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 18888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6226:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 18882,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "6159:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 18883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ListingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2510,
                          "src": "6159:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ListingFee_$2510_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.ListingFee storage pointer)"
                          }
                        },
                        "id": 18889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "listingFeeBps",
                          "listingFeeRecipient"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "6159:97:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 18894,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18191,
                                "src": "6312:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              ],
                              "id": 18893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6304:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 18892,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6304:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 18895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6304:14:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 18896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6331:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 18890,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "6270:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 18891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2515,
                          "src": "6270:25:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TokenGate_$2515_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.TokenGate storage pointer)"
                          }
                        },
                        "id": 18897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "minAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "6270:64:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      ],
                      "expression": {
                        "id": 18853,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "5905:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 18855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3627,
                      "src": "5905:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_struct$_ListingFee_$2510_memory_ptr_$_t_struct$_TokenGate_$2515_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint256,address,address,address,uint16,struct AsksDataStorage.ListingFee memory,struct AsksDataStorage.TokenGate memory) external"
                      }
                    },
                    "id": 18898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5905:439:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18899,
                  "nodeType": "ExpressionStatement",
                  "src": "5905:439:41"
                },
                {
                  "assignments": [
                    18904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18904,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "6385:3:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 19008,
                      "src": "6354:34:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                        "typeString": "struct AsksDataStorage.FullAsk"
                      },
                      "typeName": {
                        "id": 18903,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 18902,
                          "name": "AsksDataStorage.FullAsk",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2988,
                          "src": "6354:23:41"
                        },
                        "referencedDeclaration": 2988,
                        "src": "6354:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FullAsk_$2988_storage_ptr",
                          "typeString": "struct AsksDataStorage.FullAsk"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18913,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18909,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "6415:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 18908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6407:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18907,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6407:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6407:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6423:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 18905,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "6391:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 18906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFullAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "6391:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_struct$_FullAsk_$2988_memory_ptr_$",
                        "typeString": "function (address,uint256) view external returns (struct AsksDataStorage.FullAsk memory)"
                      }
                    },
                    "id": 18912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6391:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                      "typeString": "struct AsksDataStorage.FullAsk memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6354:71:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18915,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18904,
                          "src": "6444:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18916,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2971,
                        "src": "6444:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18919,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "6464:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6456:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18917,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6456:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6456:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18914,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "6435:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6435:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18922,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:37:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18924,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18904,
                          "src": "6491:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18925,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2975,
                        "src": "6491:24:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18928,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "6525:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6517:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18926,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6517:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6517:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18923,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "6482:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6482:65:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18931,
                  "nodeType": "ExpressionStatement",
                  "src": "6482:65:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18933,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18904,
                          "src": "6566:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18934,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2979,
                        "src": "6566:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18937,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "6588:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 18936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6580:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18935,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6580:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6580:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18932,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "6557:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6557:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18940,
                  "nodeType": "ExpressionStatement",
                  "src": "6557:37:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18942,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18904,
                          "src": "6613:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18943,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2981,
                        "src": "6613:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18946,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "6632:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 18945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6624:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18944,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6624:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6624:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18941,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "6604:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6604:35:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18949,
                  "nodeType": "ExpressionStatement",
                  "src": "6604:35:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18951,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18904,
                          "src": "6658:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18952,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2973,
                        "src": "6658:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 18958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 18955,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6677:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 18956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6677:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 18957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6695:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "6677:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6670:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 18953,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "6670:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6670:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 18950,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "6649:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:54:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18961,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:54:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18963,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18904,
                          "src": "6722:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18964,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "findersFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2977,
                        "src": "6722:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 18965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6741:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 18962,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "6713:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6713:33:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18967,
                  "nodeType": "ExpressionStatement",
                  "src": "6713:33:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18969,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18904,
                          "src": "6765:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 18970,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2969,
                        "src": "6765:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 18971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6776:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 18968,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "6756:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6756:28:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18973,
                  "nodeType": "ExpressionStatement",
                  "src": "6756:28:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18975,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18904,
                            "src": "6803:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 18976,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "6803:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 18977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2512,
                        "src": "6803:19:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18980,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18191,
                            "src": "6832:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$52348",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$52348",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 18979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6824:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18978,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6824:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6824:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18974,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "6794:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 18982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6794:45:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18983,
                  "nodeType": "ExpressionStatement",
                  "src": "6794:45:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18985,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18904,
                            "src": "6858:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 18986,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "6858:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 18987,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2514,
                        "src": "6858:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 18988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6883:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 18984,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "6849:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6849:36:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18990,
                  "nodeType": "ExpressionStatement",
                  "src": "6849:36:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18992,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18904,
                            "src": "6904:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 18993,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "6904:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 18994,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2507,
                        "src": "6904:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 18995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6934:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 18991,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "6895:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 18996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6895:41:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18997,
                  "nodeType": "ExpressionStatement",
                  "src": "6895:41:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 18999,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18904,
                            "src": "6955:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19000,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "6955:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 19001,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2509,
                        "src": "6955:34:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19004,
                            "name": "listingFeeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18212,
                            "src": "6999:19:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6991:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19002,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6991:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6991:28:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18998,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "6946:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6946:74:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19007,
                  "nodeType": "ExpressionStatement",
                  "src": "6946:74:41"
                }
              ]
            },
            "functionSelector": "50270661",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CreateAsk",
            "nameLocation": "5836:14:41",
            "parameters": {
              "id": 18842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5850:2:41"
            },
            "returnParameters": {
              "id": 18843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5860:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19075,
            "nodeType": "FunctionDefinition",
            "src": "7033:609:41",
            "body": {
              "id": 19074,
              "nodeType": "Block",
              "src": "7095:547:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19017,
                            "name": "other",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18221,
                            "src": "7122:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7114:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19015,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7114:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7114:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19012,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "7105:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "7105:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7105:24:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19020,
                  "nodeType": "ExpressionStatement",
                  "src": "7105:24:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 19024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7155:30:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "expression": {
                        "id": 19021,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "7139:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51842,
                      "src": "7139:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 19025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7139:47:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19026,
                  "nodeType": "ExpressionStatement",
                  "src": "7139:47:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19032,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "7232:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7224:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19030,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7224:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7224:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7252:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19037,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7274:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 19038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7274:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 19039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7292:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "7274:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7267:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 19035,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "7267:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7267:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7313:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19045,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "7342:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7334:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7334:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7334:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19049,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "7385:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7377:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19047,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7377:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7377:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19053,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "7412:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7404:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19051,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7404:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7404:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 19055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7432:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 19058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7493:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [
                              {
                                "id": 19061,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "7525:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7517:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19059,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7517:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7517:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19056,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "7450:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ListingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2510,
                          "src": "7450:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ListingFee_$2510_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.ListingFee storage pointer)"
                          }
                        },
                        "id": 19063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "listingFeeBps",
                          "listingFeeRecipient"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "7450:97:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19068,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18191,
                                "src": "7603:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              ],
                              "id": 19067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7595:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19066,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7595:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7595:14:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 19070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7622:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 19064,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "7561:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2515,
                          "src": "7561:25:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TokenGate_$2515_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.TokenGate storage pointer)"
                          }
                        },
                        "id": 19071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "minAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "7561:64:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      ],
                      "expression": {
                        "id": 19027,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "7196:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3627,
                      "src": "7196:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_struct$_ListingFee_$2510_memory_ptr_$_t_struct$_TokenGate_$2515_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint256,address,address,address,uint16,struct AsksDataStorage.ListingFee memory,struct AsksDataStorage.TokenGate memory) external"
                      }
                    },
                    "id": 19072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7196:439:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19073,
                  "nodeType": "ExpressionStatement",
                  "src": "7196:439:41"
                }
              ]
            },
            "functionSelector": "eb198baa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_CreateAskNotTokenOwnerOrOperator",
            "nameLocation": "7042:43:41",
            "parameters": {
              "id": 19010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7085:2:41"
            },
            "returnParameters": {
              "id": 19011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7095:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19156,
            "nodeType": "FunctionDefinition",
            "src": "7648:683:41",
            "body": {
              "id": 19155,
              "nodeType": "Block",
              "src": "7704:627:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19083,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "7736:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7728:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19081,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7728:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7728:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19078,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "7714:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51816,
                      "src": "7714:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7714:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19086,
                  "nodeType": "ExpressionStatement",
                  "src": "7714:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19092,
                            "name": "asks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18188,
                            "src": "7790:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                              "typeString": "contract AsksOmnibus"
                            }
                          ],
                          "id": 19091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7782:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19090,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7782:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7782:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 19094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7797:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 19087,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18200,
                        "src": "7754:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Zorb_$52796",
                          "typeString": "contract Zorb"
                        }
                      },
                      "id": 19089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForModule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52724,
                      "src": "7754:27:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 19095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7754:49:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19096,
                  "nodeType": "ExpressionStatement",
                  "src": "7754:49:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d4f44554c455f4e4f545f415050524f564544",
                        "id": 19100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7829:21:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ce1f58d242e04a0145e9441056f276e2caabf8317b62f839e48678a4e475429",
                          "typeString": "literal_string \"MODULE_NOT_APPROVED\""
                        },
                        "value": "MODULE_NOT_APPROVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0ce1f58d242e04a0145e9441056f276e2caabf8317b62f839e48678a4e475429",
                          "typeString": "literal_string \"MODULE_NOT_APPROVED\""
                        }
                      ],
                      "expression": {
                        "id": 19097,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "7813:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51842,
                      "src": "7813:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 19101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7813:38:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19102,
                  "nodeType": "ExpressionStatement",
                  "src": "7813:38:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19108,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "7897:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7889:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7889:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7889:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7917:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19113,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7939:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 19114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7939:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 19115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7957:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "7939:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7932:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 19111,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "7932:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7932:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7978:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19121,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "8007:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7999:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19119,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7999:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7999:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19125,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "8050:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8042:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19123,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8042:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8042:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19129,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "8077:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8069:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8069:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8069:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 19131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8097:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 19134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8158:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [
                              {
                                "id": 19137,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "8190:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8182:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19135,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8182:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8182:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19132,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "8115:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ListingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2510,
                          "src": "8115:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ListingFee_$2510_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.ListingFee storage pointer)"
                          }
                        },
                        "id": 19139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "listingFeeBps",
                          "listingFeeRecipient"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8115:97:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19144,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18191,
                                "src": "8268:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              ],
                              "id": 19143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8260:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19142,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8260:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8260:14:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 19146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8287:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 19140,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "8226:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2515,
                          "src": "8226:25:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TokenGate_$2515_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.TokenGate storage pointer)"
                          }
                        },
                        "id": 19147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "minAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8226:64:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      ],
                      "expression": {
                        "id": 19103,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "7861:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3627,
                      "src": "7861:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_struct$_ListingFee_$2510_memory_ptr_$_t_struct$_TokenGate_$2515_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint256,address,address,address,uint16,struct AsksDataStorage.ListingFee memory,struct AsksDataStorage.TokenGate memory) external"
                      }
                    },
                    "id": 19148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7861:439:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19149,
                  "nodeType": "ExpressionStatement",
                  "src": "7861:439:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 19150,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "8310:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51820,
                      "src": "8310:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 19153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8310:14:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19154,
                  "nodeType": "ExpressionStatement",
                  "src": "8310:14:41"
                }
              ]
            },
            "functionSelector": "ccd2f29c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_CreateAskModuleNotApproved",
            "nameLocation": "7657:37:41",
            "parameters": {
              "id": 19076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7694:2:41"
            },
            "returnParameters": {
              "id": 19077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7704:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19237,
            "nodeType": "FunctionDefinition",
            "src": "8337:712:41",
            "body": {
              "id": 19236,
              "nodeType": "Block",
              "src": "8401:648:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19164,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "8433:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8425:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8425:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8425:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19159,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "8411:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51816,
                      "src": "8411:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8411:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19167,
                  "nodeType": "ExpressionStatement",
                  "src": "8411:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19173,
                            "name": "erc721TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18182,
                            "src": "8483:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$53056",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          ],
                          "id": 19172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8475:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8475:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8475:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 19175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8506:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 19168,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18194,
                        "src": "8451:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$52379",
                          "typeString": "contract TestERC721"
                        }
                      },
                      "id": 19170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57578,
                      "src": "8451:23:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 19176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8451:61:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19177,
                  "nodeType": "ExpressionStatement",
                  "src": "8451:61:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5452414e534645525f48454c5045525f4e4f545f415050524f564544",
                        "id": 19181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8538:30:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53d5324656b187803e0b309626f1907482ca736d3d448cec071c474286cf4177",
                          "typeString": "literal_string \"TRANSFER_HELPER_NOT_APPROVED\""
                        },
                        "value": "TRANSFER_HELPER_NOT_APPROVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_53d5324656b187803e0b309626f1907482ca736d3d448cec071c474286cf4177",
                          "typeString": "literal_string \"TRANSFER_HELPER_NOT_APPROVED\""
                        }
                      ],
                      "expression": {
                        "id": 19178,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "8522:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51842,
                      "src": "8522:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 19182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8522:47:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19183,
                  "nodeType": "ExpressionStatement",
                  "src": "8522:47:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19189,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "8615:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8607:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19187,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8607:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8607:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8635:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19194,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8657:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 19195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8657:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 19196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8675:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "8657:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8650:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 19192,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "8650:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8650:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8696:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19202,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "8725:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8717:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8717:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8717:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19206,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "8768:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8760:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8760:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8760:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19210,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "8795:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8787:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8787:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8787:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 19212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8815:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 19215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8876:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [
                              {
                                "id": 19218,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "8908:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8900:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19216,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8900:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8900:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19213,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "8833:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ListingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2510,
                          "src": "8833:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ListingFee_$2510_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.ListingFee storage pointer)"
                          }
                        },
                        "id": 19220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "listingFeeBps",
                          "listingFeeRecipient"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8833:97:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19225,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18191,
                                "src": "8986:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              ],
                              "id": 19224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8978:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19223,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8978:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8978:14:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 19227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9005:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 19221,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "8944:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2515,
                          "src": "8944:25:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TokenGate_$2515_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.TokenGate storage pointer)"
                          }
                        },
                        "id": 19228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "minAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8944:64:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      ],
                      "expression": {
                        "id": 19184,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "8579:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3627,
                      "src": "8579:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_struct$_ListingFee_$2510_memory_ptr_$_t_struct$_TokenGate_$2515_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint256,address,address,address,uint16,struct AsksDataStorage.ListingFee memory,struct AsksDataStorage.TokenGate memory) external"
                      }
                    },
                    "id": 19229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8579:439:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19230,
                  "nodeType": "ExpressionStatement",
                  "src": "8579:439:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 19231,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "9028:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51820,
                      "src": "9028:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 19234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9028:14:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19235,
                  "nodeType": "ExpressionStatement",
                  "src": "9028:14:41"
                }
              ]
            },
            "functionSelector": "0af0971a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevert_CreateAskTransferHelperNotApproved",
            "nameLocation": "8346:45:41",
            "parameters": {
              "id": 19157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8391:2:41"
            },
            "returnParameters": {
              "id": 19158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8401:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19395,
            "nodeType": "FunctionDefinition",
            "src": "9103:1037:41",
            "body": {
              "id": 19394,
              "nodeType": "Block",
              "src": "9134:1006:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19246,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "9161:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9153:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19244,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9153:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9153:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19241,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "9144:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "9144:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9144:25:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19249,
                  "nodeType": "ExpressionStatement",
                  "src": "9144:25:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19255,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "9215:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9207:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9207:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9207:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9235:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19260,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9257:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 19261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9257:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 19262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9275:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "9257:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9250:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 19258,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "9250:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9250:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9296:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19268,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "9325:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9317:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19266,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9317:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9317:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19272,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "9368:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9360:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9360:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9360:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19276,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "9395:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9387:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19274,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9387:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9387:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 19278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9415:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 19281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9476:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [
                              {
                                "id": 19284,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "9508:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9500:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19282,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9500:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9500:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19279,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "9433:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ListingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2510,
                          "src": "9433:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ListingFee_$2510_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.ListingFee storage pointer)"
                          }
                        },
                        "id": 19286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "listingFeeBps",
                          "listingFeeRecipient"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "9433:97:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19291,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18191,
                                "src": "9586:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              ],
                              "id": 19290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9578:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19289,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9578:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9578:14:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 19293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9605:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 19287,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "9544:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2515,
                          "src": "9544:25:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TokenGate_$2515_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.TokenGate storage pointer)"
                          }
                        },
                        "id": 19294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "minAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "9544:64:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      ],
                      "expression": {
                        "id": 19250,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "9179:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3627,
                      "src": "9179:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_struct$_ListingFee_$2510_memory_ptr_$_t_struct$_TokenGate_$2515_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint256,address,address,address,uint16,struct AsksDataStorage.ListingFee memory,struct AsksDataStorage.TokenGate memory) external"
                      }
                    },
                    "id": 19295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9179:439:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19296,
                  "nodeType": "ExpressionStatement",
                  "src": "9179:439:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19302,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "9646:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9638:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19300,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9638:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9638:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19297,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "9629:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51810,
                      "src": "9629:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9629:24:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19305,
                  "nodeType": "ExpressionStatement",
                  "src": "9629:24:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19311,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "9684:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9676:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9676:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9676:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9692:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 19314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9695:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19317,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "9712:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9704:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19315,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9704:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9704:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19321,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18209,
                            "src": "9727:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9719:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9719:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9719:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19306,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "9663:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fillAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4036,
                      "src": "9663:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address,address) payable external"
                      }
                    },
                    "id": 19323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9663:72:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19324,
                  "nodeType": "ExpressionStatement",
                  "src": "9663:72:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19330,
                                "name": "royaltyRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18215,
                                "src": "9778:16:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9770:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19328,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9770:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9770:25:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19326,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "9755:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          },
                          "id": 19327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52423,
                          "src": "9755:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 19332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9755:41:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3035",
                        "id": 19333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9798:10:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "0.05"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "id": 19325,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "9746:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9746:63:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19335,
                  "nodeType": "ExpressionStatement",
                  "src": "9746:63:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19341,
                                "name": "finder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18209,
                                "src": "9851:6:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9843:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19339,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9843:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9843:15:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19337,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "9828:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          },
                          "id": 19338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52423,
                          "src": "9828:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 19343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9828:31:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_95000000000000000_by_1",
                          "typeString": "int_const 95000000000000000"
                        },
                        "id": 19346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "302e3935",
                          "id": 19344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9861:10:41",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_950000000000000000_by_1",
                            "typeString": "int_const 950000000000000000"
                          },
                          "value": "0.95"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 19345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9874:2:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "9861:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_95000000000000000_by_1",
                          "typeString": "int_const 95000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_95000000000000000_by_1",
                          "typeString": "int_const 95000000000000000"
                        }
                      ],
                      "id": 19336,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "9819:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9819:58:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19348,
                  "nodeType": "ExpressionStatement",
                  "src": "9819:58:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19354,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "9919:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9911:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19352,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9911:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9911:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19350,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "9896:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          },
                          "id": 19351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52423,
                          "src": "9896:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 19356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9896:44:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_95000000000000_by_1",
                          "typeString": "int_const 95000000000000"
                        },
                        "id": 19359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "302e3935",
                          "id": 19357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9942:10:41",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_950000000000000000_by_1",
                            "typeString": "int_const 950000000000000000"
                          },
                          "value": "0.95"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 19358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9955:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "9942:18:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_95000000000000_by_1",
                          "typeString": "int_const 95000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_95000000000000_by_1",
                          "typeString": "int_const 95000000000000"
                        }
                      ],
                      "id": 19349,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "9887:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9887:74:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19361,
                  "nodeType": "ExpressionStatement",
                  "src": "9887:74:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19367,
                                "name": "sellerFundsRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18203,
                                "src": "10003:20:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9995:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19365,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9995:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9995:29:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19363,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "9980:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          },
                          "id": 19364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52423,
                          "src": "9980:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 19369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9980:45:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_854905000000000000_by_1",
                          "typeString": "int_const 854905000000000000"
                        },
                        "id": 19380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_855000000000000000_by_1",
                            "typeString": "int_const 855000000000000000"
                          },
                          "id": 19375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "302e3935",
                            "id": 19370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10027:10:41",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_950000000000000000_by_1",
                              "typeString": "int_const 950000000000000000"
                            },
                            "value": "0.95"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_95000000000000000_by_1",
                                  "typeString": "int_const 95000000000000000"
                                },
                                "id": 19373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "302e3935",
                                  "id": 19371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10041:10:41",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_950000000000000000_by_1",
                                    "typeString": "int_const 950000000000000000"
                                  },
                                  "value": "0.95"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 19372,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10054:2:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "10041:15:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_95000000000000000_by_1",
                                  "typeString": "int_const 95000000000000000"
                                }
                              }
                            ],
                            "id": 19374,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10040:17:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_95000000000000000_by_1",
                              "typeString": "int_const 95000000000000000"
                            }
                          },
                          "src": "10027:30:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_855000000000000000_by_1",
                            "typeString": "int_const 855000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_95000000000000_by_1",
                                "typeString": "int_const 95000000000000"
                              },
                              "id": 19378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "302e3935",
                                "id": 19376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10061:10:41",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_950000000000000000_by_1",
                                  "typeString": "int_const 950000000000000000"
                                },
                                "value": "0.95"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130303030",
                                "id": 19377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10074:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              },
                              "src": "10061:18:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95000000000000_by_1",
                                "typeString": "int_const 95000000000000"
                              }
                            }
                          ],
                          "id": 19379,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10060:20:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_95000000000000_by_1",
                            "typeString": "int_const 95000000000000"
                          }
                        },
                        "src": "10027:53:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_854905000000000000_by_1",
                          "typeString": "int_const 854905000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_854905000000000000_by_1",
                          "typeString": "int_const 854905000000000000"
                        }
                      ],
                      "id": 19362,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "9971:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9971:110:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19382,
                  "nodeType": "ExpressionStatement",
                  "src": "9971:110:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10114:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 19384,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "10100:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          },
                          "id": 19385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57426,
                          "src": "10100:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 19387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10100:16:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19390,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "10126:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10118:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10118:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10118:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19383,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "10091:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10091:42:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19393,
                  "nodeType": "ExpressionStatement",
                  "src": "10091:42:41"
                }
              ]
            },
            "documentation": {
              "id": 19238,
              "nodeType": "StructuredDocumentation",
              "src": "9055:43:41",
              "text": "------------ FILL ASK ------------ ///"
            },
            "functionSelector": "06bac521",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_FillAsk",
            "nameLocation": "9112:12:41",
            "parameters": {
              "id": 19239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9124:2:41"
            },
            "returnParameters": {
              "id": 19240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9134:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19584,
            "nodeType": "FunctionDefinition",
            "src": "10195:1298:41",
            "body": {
              "id": 19583,
              "nodeType": "Block",
              "src": "10227:1266:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19404,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "10259:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10251:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10251:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10251:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19399,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "10237:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51816,
                      "src": "10237:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10237:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19407,
                  "nodeType": "ExpressionStatement",
                  "src": "10237:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19413,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "10313:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10305:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10305:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10305:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10333:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19418,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10355:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 19419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10355:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 19420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10373:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "10355:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10348:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 19416,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "10348:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10348:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10394:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19426,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "10423:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10415:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19424,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10415:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10415:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19430,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "10466:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10458:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19428,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10458:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10458:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19434,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "10493:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10485:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10485:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10485:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 19436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10513:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 19439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10574:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [
                              {
                                "id": 19442,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "10606:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10598:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19440,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10598:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10598:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19437,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "10531:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ListingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2510,
                          "src": "10531:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ListingFee_$2510_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.ListingFee storage pointer)"
                          }
                        },
                        "id": 19444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "listingFeeBps",
                          "listingFeeRecipient"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "10531:97:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19449,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18191,
                                "src": "10684:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              ],
                              "id": 19448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10676:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19447,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10676:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10676:14:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 19451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10703:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 19445,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "10642:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2515,
                          "src": "10642:25:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TokenGate_$2515_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.TokenGate storage pointer)"
                          }
                        },
                        "id": 19452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "minAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "10642:64:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      ],
                      "expression": {
                        "id": 19408,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "10277:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3627,
                      "src": "10277:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_struct$_ListingFee_$2510_memory_ptr_$_t_struct$_TokenGate_$2515_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint256,address,address,address,uint16,struct AsksDataStorage.ListingFee memory,struct AsksDataStorage.TokenGate memory) external"
                      }
                    },
                    "id": 19453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10277:439:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19454,
                  "nodeType": "ExpressionStatement",
                  "src": "10277:439:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19460,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "10751:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10743:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10743:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10743:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10759:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 19463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10762:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19466,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "10779:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10771:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10771:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10771:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19455,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "10726:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAskPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3679,
                      "src": "10726:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address) external"
                      }
                    },
                    "id": 19468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10726:59:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19469,
                  "nodeType": "ExpressionStatement",
                  "src": "10726:59:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 19470,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "10795:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51820,
                      "src": "10795:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 19473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10795:14:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19474,
                  "nodeType": "ExpressionStatement",
                  "src": "10795:14:41"
                },
                {
                  "assignments": [
                    19479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19479,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "10851:3:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 19583,
                      "src": "10820:34:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                        "typeString": "struct AsksDataStorage.FullAsk"
                      },
                      "typeName": {
                        "id": 19478,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 19477,
                          "name": "AsksDataStorage.FullAsk",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2988,
                          "src": "10820:23:41"
                        },
                        "referencedDeclaration": 2988,
                        "src": "10820:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FullAsk_$2988_storage_ptr",
                          "typeString": "struct AsksDataStorage.FullAsk"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19488,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19484,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "10881:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10873:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19482,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10873:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10873:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10889:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 19480,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "10857:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFullAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "10857:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_struct$_FullAsk_$2988_memory_ptr_$",
                        "typeString": "function (address,uint256) view external returns (struct AsksDataStorage.FullAsk memory)"
                      }
                    },
                    "id": 19487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10857:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                      "typeString": "struct AsksDataStorage.FullAsk memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10820:71:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19490,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19479,
                          "src": "10910:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19491,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2971,
                        "src": "10910:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19494,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "10930:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10922:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10922:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10922:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19489,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "10901:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10901:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19497,
                  "nodeType": "ExpressionStatement",
                  "src": "10901:37:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19499,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19479,
                          "src": "10957:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2975,
                        "src": "10957:24:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19503,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "10991:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10983:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10983:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10983:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19498,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "10948:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10948:65:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19506,
                  "nodeType": "ExpressionStatement",
                  "src": "10948:65:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19508,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19479,
                          "src": "11032:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19509,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2979,
                        "src": "11032:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19512,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "11054:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11046:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19510,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11046:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11046:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "11023:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11023:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19515,
                  "nodeType": "ExpressionStatement",
                  "src": "11023:37:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19517,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19479,
                          "src": "11079:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19518,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2981,
                        "src": "11079:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19521,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "11098:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11090:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19519,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11090:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11090:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19516,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "11070:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11070:35:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19524,
                  "nodeType": "ExpressionStatement",
                  "src": "11070:35:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19526,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19479,
                          "src": "11124:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19527,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2973,
                        "src": "11124:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19530,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11143:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 19531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11143:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 19532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11161:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "11143:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11136:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 19528,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "11136:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11136:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 19525,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "11115:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11115:54:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19536,
                  "nodeType": "ExpressionStatement",
                  "src": "11115:54:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19538,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19479,
                          "src": "11188:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19539,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "findersFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2977,
                        "src": "11188:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 19540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11207:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 19537,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "11179:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11179:33:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19542,
                  "nodeType": "ExpressionStatement",
                  "src": "11179:33:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19544,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19479,
                          "src": "11231:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2969,
                        "src": "11231:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 19546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11242:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 19543,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "11222:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11222:28:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19548,
                  "nodeType": "ExpressionStatement",
                  "src": "11222:28:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19550,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19479,
                            "src": "11269:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19551,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "11269:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 19552,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2512,
                        "src": "11269:19:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19555,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18191,
                            "src": "11298:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$52348",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$52348",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 19554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11290:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19553,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11290:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11290:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19549,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "11260:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11260:45:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19558,
                  "nodeType": "ExpressionStatement",
                  "src": "11260:45:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19560,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19479,
                            "src": "11324:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19561,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "11324:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 19562,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2514,
                        "src": "11324:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11349:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 19559,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "11315:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11315:36:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19565,
                  "nodeType": "ExpressionStatement",
                  "src": "11315:36:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19567,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19479,
                            "src": "11370:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19568,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "11370:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 19569,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2507,
                        "src": "11370:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11400:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 19566,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "11361:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11361:41:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19572,
                  "nodeType": "ExpressionStatement",
                  "src": "11361:41:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19574,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19479,
                            "src": "11421:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19575,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "11421:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 19576,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2509,
                        "src": "11421:34:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19579,
                            "name": "listingFeeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18212,
                            "src": "11465:19:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11457:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19577,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11457:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11457:28:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19573,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "11412:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11412:74:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19582,
                  "nodeType": "ExpressionStatement",
                  "src": "11412:74:41"
                }
              ]
            },
            "documentation": {
              "id": 19396,
              "nodeType": "StructuredDocumentation",
              "src": "10146:44:41",
              "text": "------------ SET PRICE ------------ ///"
            },
            "functionSelector": "cd585530",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SetPrice",
            "nameLocation": "10204:13:41",
            "parameters": {
              "id": 19397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10217:2:41"
            },
            "returnParameters": {
              "id": 19398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10227:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19796,
            "nodeType": "FunctionDefinition",
            "src": "11549:1340:41",
            "body": {
              "id": 19795,
              "nodeType": "Block",
              "src": "11582:1307:41",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19593,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18200,
                            "src": "11614:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11606:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19591,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11606:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11606:15:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19588,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "11592:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51816,
                      "src": "11592:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11592:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19596,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19602,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "11669:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11661:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11661:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11661:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11689:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 19610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 19607,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11711:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 19608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11711:15:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 19609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11729:6:41",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "11711:24:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11704:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 19605,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "11704:6:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11704:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 19612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11750:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19615,
                            "name": "sellerFundsRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18203,
                            "src": "11779:20:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11771:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19613,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11771:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11771:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19619,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "11822:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11814:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19617,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11814:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11814:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 19623,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "11849:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11841:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11841:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11841:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 19625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11869:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 19628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11930:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "arguments": [
                              {
                                "id": 19631,
                                "name": "listingFeeRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18212,
                                "src": "11962:19:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Zorb_$52796",
                                  "typeString": "contract Zorb"
                                }
                              ],
                              "id": 19630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11954:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19629,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11954:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11954:28:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19626,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "11887:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ListingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2510,
                          "src": "11887:26:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ListingFee_$2510_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.ListingFee storage pointer)"
                          }
                        },
                        "id": 19633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "listingFeeBps",
                          "listingFeeRecipient"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "11887:97:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 19638,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18191,
                                "src": "12040:5:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestERC20_$52348",
                                  "typeString": "contract TestERC20"
                                }
                              ],
                              "id": 19637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12032:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 19636,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12032:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 19639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12032:14:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 19640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12059:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 19634,
                            "name": "AsksDataStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3144,
                            "src": "11998:15:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AsksDataStorage_$3144_$",
                              "typeString": "type(contract AsksDataStorage)"
                            }
                          },
                          "id": 19635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2515,
                          "src": "11998:25:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TokenGate_$2515_storage_ptr_$",
                            "typeString": "type(struct AsksDataStorage.TokenGate storage pointer)"
                          }
                        },
                        "id": 19641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "minAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "11998:64:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                          "typeString": "struct AsksDataStorage.ListingFee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                          "typeString": "struct AsksDataStorage.TokenGate memory"
                        }
                      ],
                      "expression": {
                        "id": 19597,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "11633:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3627,
                      "src": "11633:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_struct$_ListingFee_$2510_memory_ptr_$_t_struct$_TokenGate_$2515_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint256,address,address,address,uint16,struct AsksDataStorage.ListingFee memory,struct AsksDataStorage.TokenGate memory) external"
                      }
                    },
                    "id": 19642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11633:439:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19643,
                  "nodeType": "ExpressionStatement",
                  "src": "11633:439:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19649,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "12106:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12098:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12098:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12098:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12114:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 19644,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "12083:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cancelAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3757,
                      "src": "12083:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 19652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12083:33:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19653,
                  "nodeType": "ExpressionStatement",
                  "src": "12083:33:41"
                },
                {
                  "assignments": [
                    19658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19658,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "12158:3:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 19795,
                      "src": "12127:34:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                        "typeString": "struct AsksDataStorage.FullAsk"
                      },
                      "typeName": {
                        "id": 19657,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 19656,
                          "name": "AsksDataStorage.FullAsk",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2988,
                          "src": "12127:23:41"
                        },
                        "referencedDeclaration": 2988,
                        "src": "12127:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FullAsk_$2988_storage_ptr",
                          "typeString": "struct AsksDataStorage.FullAsk"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19667,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19663,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "12188:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12180:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12180:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12180:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12196:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 19659,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "12164:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFullAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4060,
                      "src": "12164:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_struct$_FullAsk_$2988_memory_ptr_$",
                        "typeString": "function (address,uint256) view external returns (struct AsksDataStorage.FullAsk memory)"
                      }
                    },
                    "id": 19666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12164:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                      "typeString": "struct AsksDataStorage.FullAsk memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12127:71:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19669,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19658,
                          "src": "12217:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2971,
                        "src": "12217:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12237:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12229:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19671,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12229:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12229:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19668,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "12208:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12208:32:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19676,
                  "nodeType": "ExpressionStatement",
                  "src": "12208:32:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19678,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19658,
                          "src": "12259:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19679,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2975,
                        "src": "12259:24:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12293:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12285:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19680,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12285:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12285:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19677,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "12250:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12250:46:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19685,
                  "nodeType": "ExpressionStatement",
                  "src": "12250:46:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19687,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19658,
                          "src": "12315:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19688,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2979,
                        "src": "12315:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12337:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12329:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12329:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12329:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19686,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "12306:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12306:34:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19694,
                  "nodeType": "ExpressionStatement",
                  "src": "12306:34:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19696,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19658,
                          "src": "12359:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19697,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2981,
                        "src": "12359:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12378:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12370:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12370:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12370:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19695,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "12350:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12350:31:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19703,
                  "nodeType": "ExpressionStatement",
                  "src": "12350:31:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19705,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19658,
                          "src": "12400:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19706,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2973,
                        "src": "12400:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12412:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 19704,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "12391:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12391:23:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19709,
                  "nodeType": "ExpressionStatement",
                  "src": "12391:23:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19711,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19658,
                          "src": "12433:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19712,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "findersFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2977,
                        "src": "12433:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12452:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 19710,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "12424:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12424:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19715,
                  "nodeType": "ExpressionStatement",
                  "src": "12424:30:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19717,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19658,
                          "src": "12473:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                            "typeString": "struct AsksDataStorage.FullAsk memory"
                          }
                        },
                        "id": 19718,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2969,
                        "src": "12473:9:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12484:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 19716,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "12464:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12464:22:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19721,
                  "nodeType": "ExpressionStatement",
                  "src": "12464:22:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19723,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19658,
                            "src": "12505:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19724,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "12505:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 19725,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2512,
                        "src": "12505:19:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12534:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12526:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19726,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12526:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12526:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19722,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "12496:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12496:41:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19731,
                  "nodeType": "ExpressionStatement",
                  "src": "12496:41:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19733,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19658,
                            "src": "12556:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19734,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenGate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2984,
                          "src": "12556:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenGate_$2515_memory_ptr",
                            "typeString": "struct AsksDataStorage.TokenGate memory"
                          }
                        },
                        "id": 19735,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2514,
                        "src": "12556:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12581:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 19732,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "12547:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12547:36:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19738,
                  "nodeType": "ExpressionStatement",
                  "src": "12547:36:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19740,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19658,
                            "src": "12602:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19741,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "12602:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 19742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2507,
                        "src": "12602:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12632:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 19739,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53465,
                      "src": "12593:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12593:41:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19745,
                  "nodeType": "ExpressionStatement",
                  "src": "12593:41:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 19747,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19658,
                            "src": "12653:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FullAsk_$2988_memory_ptr",
                              "typeString": "struct AsksDataStorage.FullAsk memory"
                            }
                          },
                          "id": 19748,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "listingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "12653:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ListingFee_$2510_memory_ptr",
                            "typeString": "struct AsksDataStorage.ListingFee memory"
                          }
                        },
                        "id": 19749,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "listingFeeRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2509,
                        "src": "12653:34:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12697:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12689:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12689:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12689:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19746,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53271,
                        53296,
                        53326,
                        53351,
                        53410,
                        53435,
                        53465,
                        53490,
                        54590,
                        54625
                      ],
                      "referencedDeclaration": 53271,
                      "src": "12644:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 19754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12644:56:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19755,
                  "nodeType": "ExpressionStatement",
                  "src": "12644:56:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 19756,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "12710:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51820,
                      "src": "12710:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 19759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12710:14:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19760,
                  "nodeType": "ExpressionStatement",
                  "src": "12710:14:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19766,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18218,
                            "src": "12757:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Zorb_$52796",
                              "typeString": "contract Zorb"
                            }
                          ],
                          "id": 19765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12749:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19764,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12749:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12749:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19761,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "12735:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51816,
                      "src": "12735:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 19768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12735:29:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19769,
                  "nodeType": "ExpressionStatement",
                  "src": "12735:29:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "id": 19773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12790:14:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        },
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        }
                      ],
                      "expression": {
                        "id": 19770,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18167,
                        "src": "12774:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$51877",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 19772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51842,
                      "src": "12774:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 19774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12774:31:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19775,
                  "nodeType": "ExpressionStatement",
                  "src": "12774:31:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19781,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18194,
                            "src": "12836:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$52379",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 19780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12828:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19779,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12828:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12828:14:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 19783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12844:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 19784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12847:7:41",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 19787,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18197,
                            "src": "12864:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WETH_$52636",
                              "typeString": "contract WETH"
                            }
                          ],
                          "id": 19786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12856:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19785,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12856:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12856:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 19791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12879:1:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12871:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19789,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12871:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12871:10:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19776,
                        "name": "asks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "12815:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AsksOmnibus_$4061",
                          "typeString": "contract AsksOmnibus"
                        }
                      },
                      "id": 19778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fillAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4036,
                      "src": "12815:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address,address) payable external"
                      }
                    },
                    "id": 19793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12815:67:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19794,
                  "nodeType": "ExpressionStatement",
                  "src": "12815:67:41"
                }
              ]
            },
            "documentation": {
              "id": 19585,
              "nodeType": "StructuredDocumentation",
              "src": "11499:45:41",
              "text": "------------ CANCEL ASK ------------ ///"
            },
            "functionSelector": "6c98ba88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CancelAsk",
            "nameLocation": "11558:14:41",
            "parameters": {
              "id": 19586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11572:2:41"
            },
            "returnParameters": {
              "id": 19587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11582:0:41"
            },
            "scope": 19797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18163,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54737,
              "src": "1177:6:41"
            },
            "id": 18164,
            "nodeType": "InheritanceSpecifier",
            "src": "1177:6:41"
          }
        ],
        "canonicalName": "AsksOmnibusTest",
        "contractDependencies": [
          379,
          744,
          4061,
          51965,
          52348,
          52379,
          52636,
          52680,
          52796,
          52989,
          53056
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 18162,
          "nodeType": "StructuredDocumentation",
          "src": "1049:100:41",
          "text": "@title ReserveAuctionFindersErc20Test\n @notice Unit Tests for Reserve Auction Finders ERC-20"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          19797,
          54737
        ],
        "name": "AsksOmnibusTest",
        "nameLocation": "1158:15:41",
        "scope": 19798,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 41
}